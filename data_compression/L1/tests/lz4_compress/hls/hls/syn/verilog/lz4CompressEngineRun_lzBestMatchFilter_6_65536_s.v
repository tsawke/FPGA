// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module lz4CompressEngineRun_lzBestMatchFilter_6_65536_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        compressdStream_dout,
        compressdStream_empty_n,
        compressdStream_read,
        compressdStream_num_data_valid,
        compressdStream_fifo_cap,
        bestMatchStream_din,
        bestMatchStream_full_n,
        bestMatchStream_write,
        bestMatchStream_num_data_valid,
        bestMatchStream_fifo_cap,
        input_size_dout,
        input_size_empty_n,
        input_size_read,
        input_size_num_data_valid,
        input_size_fifo_cap,
        input_size_c1_din,
        input_size_c1_full_n,
        input_size_c1_write,
        input_size_c1_num_data_valid,
        input_size_c1_fifo_cap
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] compressdStream_dout;
input   compressdStream_empty_n;
output   compressdStream_read;
input  [3:0] compressdStream_num_data_valid;
input  [3:0] compressdStream_fifo_cap;
output  [31:0] bestMatchStream_din;
input   bestMatchStream_full_n;
output   bestMatchStream_write;
input  [31:0] bestMatchStream_num_data_valid;
input  [31:0] bestMatchStream_fifo_cap;
input  [31:0] input_size_dout;
input   input_size_empty_n;
output   input_size_read;
input  [2:0] input_size_num_data_valid;
input  [2:0] input_size_fifo_cap;
output  [31:0] input_size_c1_din;
input   input_size_c1_full_n;
output   input_size_c1_write;
input  [2:0] input_size_c1_num_data_valid;
input  [2:0] input_size_c1_fifo_cap;

reg ap_done;
reg ap_idle;
reg start_write;
reg compressdStream_read;
reg[31:0] bestMatchStream_din;
reg bestMatchStream_write;
reg input_size_read;
reg input_size_c1_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    compressdStream_blk_n;
wire   [0:0] icmp_ln315_fu_156_p2;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    bestMatchStream_blk_n;
wire    ap_CS_fsm_state10;
reg   [0:0] icmp_ln315_reg_301;
wire   [0:0] icmp_ln356_fu_216_p2;
reg    input_size_blk_n;
reg    input_size_c1_blk_n;
reg   [31:0] input_size_2_reg_296;
reg    ap_block_state1;
reg   [31:0] compare_window_reg_312;
reg   [31:0] compare_window_16_reg_317;
reg   [31:0] compare_window_17_reg_322;
reg   [31:0] compare_window_18_reg_327;
reg   [31:0] compare_window_19_reg_332;
reg   [31:0] compare_window_20_reg_337;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_idle;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_ready;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compressdStream_read;
wire   [31:0] grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_write;
wire   [31:0] grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out_ap_vld;
wire   [31:0] grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out_ap_vld;
wire   [31:0] grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out_ap_vld;
wire   [31:0] grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out_ap_vld;
wire   [31:0] grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out_ap_vld;
wire   [31:0] grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out;
wire    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out_ap_vld;
reg    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg   [2:0] i_8_fu_104;
wire   [2:0] add_ln356_fu_222_p2;
reg    ap_predicate_op53_write_state10;
reg    ap_block_state10;
wire   [31:0] tmp_s_fu_228_p15;
wire   [31:0] tmp_s_fu_228_p13;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire   [2:0] tmp_s_fu_228_p1;
wire   [2:0] tmp_s_fu_228_p3;
wire   [2:0] tmp_s_fu_228_p5;
wire   [2:0] tmp_s_fu_228_p7;
wire  signed [2:0] tmp_s_fu_228_p9;
wire  signed [2:0] tmp_s_fu_228_p11;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg = 1'b0;
#0 i_8_fu_104 = 3'd0;
end

lz4CompressEngineRun_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start),
    .ap_done(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done),
    .ap_idle(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_idle),
    .ap_ready(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_ready),
    .compressdStream_dout(compressdStream_dout),
    .compressdStream_empty_n(compressdStream_empty_n),
    .compressdStream_read(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compressdStream_read),
    .compressdStream_num_data_valid(4'd0),
    .compressdStream_fifo_cap(4'd0),
    .bestMatchStream_din(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din),
    .bestMatchStream_full_n(bestMatchStream_full_n),
    .bestMatchStream_write(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_write),
    .bestMatchStream_num_data_valid(bestMatchStream_num_data_valid),
    .bestMatchStream_fifo_cap(bestMatchStream_fifo_cap),
    .compare_window_5(compare_window_20_reg_337),
    .compare_window_4(compare_window_19_reg_332),
    .compare_window_3(compare_window_18_reg_327),
    .compare_window_2(compare_window_17_reg_322),
    .compare_window_1(compare_window_16_reg_317),
    .compare_window(compare_window_reg_312),
    .input_size_2(input_size_2_reg_296),
    .compare_window_12_out(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out),
    .compare_window_12_out_ap_vld(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out_ap_vld),
    .compare_window_13_out(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out),
    .compare_window_13_out_ap_vld(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out_ap_vld),
    .compare_window_14_out(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out),
    .compare_window_14_out_ap_vld(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out_ap_vld),
    .compare_window_15_out(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out),
    .compare_window_15_out_ap_vld(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out_ap_vld),
    .compare_window_16_out(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out),
    .compare_window_16_out_ap_vld(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out_ap_vld),
    .compare_window_17_out(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out),
    .compare_window_17_out_ap_vld(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out_ap_vld)
);

(* dissolve_hierarchy = "yes" *) lz4CompressEngineRun_sparsemux_13_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_13_3_32_1_1_U57(
    .din0(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out),
    .din1(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out),
    .din2(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out),
    .din3(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out),
    .din4(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out),
    .din5(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out),
    .def(tmp_s_fu_228_p13),
    .sel(i_8_fu_104),
    .dout(tmp_s_fu_228_p15)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10) & ((icmp_ln356_fu_216_p2 == 1'd1) | (icmp_ln315_reg_301 == 1'd1)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg <= 1'b1;
        end else if ((grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_ready == 1'b1)) begin
            grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln315_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        i_8_fu_104 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10) & (icmp_ln356_fu_216_p2 == 1'd0) & (icmp_ln315_reg_301 == 1'd0))) begin
        i_8_fu_104 <= add_ln356_fu_222_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        compare_window_16_reg_317 <= compressdStream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        compare_window_17_reg_322 <= compressdStream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        compare_window_18_reg_327 <= compressdStream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        compare_window_19_reg_332 <= compressdStream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        compare_window_20_reg_337 <= compressdStream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        compare_window_reg_312 <= compressdStream_dout;
        icmp_ln315_reg_301 <= icmp_ln315_fu_156_p2;
        input_size_2_reg_296 <= input_size_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state10)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((compressdStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((compressdStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((compressdStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((compressdStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((compressdStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10) & ((icmp_ln356_fu_216_p2 == 1'd1) | (icmp_ln315_reg_301 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln356_fu_216_p2 == 1'd0) & (icmp_ln315_reg_301 == 1'd0))) begin
        bestMatchStream_blk_n = bestMatchStream_full_n;
    end else begin
        bestMatchStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op53_write_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10))) begin
        bestMatchStream_din = tmp_s_fu_228_p15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bestMatchStream_din = grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din;
    end else begin
        bestMatchStream_din = grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din;
    end
end

always @ (*) begin
    if (((ap_predicate_op53_write_state10 == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10))) begin
        bestMatchStream_write = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bestMatchStream_write = grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_write;
    end else begin
        bestMatchStream_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (icmp_ln315_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        compressdStream_blk_n = compressdStream_empty_n;
    end else begin
        compressdStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln315_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1)) | ((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        compressdStream_read = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        compressdStream_read = grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compressdStream_read;
    end else begin
        compressdStream_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        input_size_blk_n = input_size_empty_n;
    end else begin
        input_size_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        input_size_c1_blk_n = input_size_c1_full_n;
    end else begin
        input_size_c1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        input_size_c1_write = 1'b1;
    end else begin
        input_size_c1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        input_size_read = 1'b1;
    end else begin
        input_size_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10) & ((icmp_ln356_fu_216_p2 == 1'd1) | (icmp_ln315_reg_301 == 1'd1)))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln315_fu_156_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((icmp_ln315_fu_156_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((compressdStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10) & ((icmp_ln356_fu_216_p2 == 1'd1) | (icmp_ln315_reg_301 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10) & (icmp_ln356_fu_216_p2 == 1'd0) & (icmp_ln315_reg_301 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln356_fu_222_p2 = (i_8_fu_104 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((input_size_c1_full_n == 1'b0) | (input_size_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0) | ((icmp_ln315_fu_156_p2 == 1'd0) & (compressdStream_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state10 = ((bestMatchStream_full_n == 1'b0) & (ap_predicate_op53_write_state10 == 1'b1));
end

always @ (*) begin
    ap_predicate_op53_write_state10 = ((icmp_ln356_fu_216_p2 == 1'd0) & (icmp_ln315_reg_301 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start = grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg;

assign icmp_ln315_fu_156_p2 = ((input_size_dout == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln356_fu_216_p2 = ((i_8_fu_104 == 3'd6) ? 1'b1 : 1'b0);

assign input_size_c1_din = input_size_dout;

assign start_out = real_start;

assign tmp_s_fu_228_p13 = 'bx;

endmodule //lz4CompressEngineRun_lzBestMatchFilter_6_65536_s
