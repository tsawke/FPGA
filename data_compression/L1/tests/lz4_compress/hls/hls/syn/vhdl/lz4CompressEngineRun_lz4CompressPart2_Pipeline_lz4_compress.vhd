-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lz4CompressEngineRun_lz4CompressPart2_Pipeline_lz4_compress is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lenOffset_Stream_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    lenOffset_Stream_empty_n : IN STD_LOGIC;
    lenOffset_Stream_read : OUT STD_LOGIC;
    lenOffset_Stream_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    lenOffset_Stream_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    lit_outStream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    lit_outStream_empty_n : IN STD_LOGIC;
    lit_outStream_read : OUT STD_LOGIC;
    lit_outStream_num_data_valid : IN STD_LOGIC_VECTOR (12 downto 0);
    lit_outStream_fifo_cap : IN STD_LOGIC_VECTOR (12 downto 0);
    lz4Out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    lz4Out_full_n : IN STD_LOGIC;
    lz4Out_write : OUT STD_LOGIC;
    lz4Out_eos_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    lz4Out_eos_full_n : IN STD_LOGIC;
    lz4Out_eos_write : OUT STD_LOGIC;
    input_size_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    compressedSize_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressedSize_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of lz4CompressEngineRun_lz4CompressPart2_Pipeline_lz4_compress is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_FE : STD_LOGIC_VECTOR (15 downto 0) := "0000000011111110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv16_FF01 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv17_4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_const_lv16_309 : STD_LOGIC_VECTOR (15 downto 0) := "0000001100001001";
    constant ap_const_lv16_E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001110";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_FFF1 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal or_ln129_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_readOffsetFlag_phi_fu_200_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op45_read_state2 : BOOLEAN;
    signal next_state_load_load_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op73_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal should_write_reg_942 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter2_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp1_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp2_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp2 : BOOLEAN;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal lenOffset_Stream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal lit_outStream_blk_n : STD_LOGIC;
    signal lz4Out_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal lz4Out_eos_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp2 : BOOLEAN;
    signal readOffsetFlag_reg_196 : STD_LOGIC_VECTOR (0 downto 0);
    signal readOffsetFlag_4_reg_207 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal or_ln129_reg_904 : STD_LOGIC_VECTOR (0 downto 0);
    signal outValue_10_fu_371_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal outValue_8_fu_446_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal outValue_6_fu_517_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal outValue_fu_736_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal should_write_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_phi_reg_pp0_iter1_readOffsetFlag_4_reg_207 : STD_LOGIC_VECTOR (0 downto 0);
    signal readOffsetFlag_1_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal readOffsetFlag_2_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal readOffsetFlag_3_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_outValue_5_reg_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_outValue_5_reg_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal ap_phi_reg_pp0_iter2_outValue_5_reg_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal inIdx_fu_116 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal inIdx_5_fu_627_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal extra_match_len_fu_120 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal match_len_ge_15_fu_718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lit_ending_fu_124 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal lit_ending_3_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal match_offset_plus_one_fu_128 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal match_offset_plus_one_1_fu_758_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal write_lit_length_fu_132 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal write_lit_length_4_fu_455_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lit_length_6_fu_557_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal lit_length_fu_136 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal lit_length_5_fu_531_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal lit_length_3_fu_690_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_length_fu_140 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal match_length_18_fu_385_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_length_16_fu_750_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_state_fu_144 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln238_1_fu_393_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln232_fu_426_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln218_fu_483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln116_fu_539_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln116_fu_714_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal compressedSize_fu_148 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal compressedSize_2_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal nextLenOffsetValue_fu_152 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_sig_allocacmp_nextLenOffsetValue_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_01001_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln129_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln129_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal match_len_ge_255_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln236_fu_367_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal match_length_17_fu_379_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln218_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln219_fu_467_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_state_2_fu_475_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal lit_len_ge_255_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln205_fu_513_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lit_length_4_fu_525_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_len_tmp_fu_349_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln153_fu_567_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln154_1_fu_575_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln154_fu_581_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln153_1_fu_571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln154_fu_585_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal match_off_tmp_fu_353_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln157_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln157_1_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln158_fu_615_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal is_special_end_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inIdx_4_fu_591_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal is_normal_end_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln167_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lit_len_gt_0_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_658_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal lit_len_ge_15_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln174_fu_668_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal lit_length_2_fu_684_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln176_1_fu_698_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_state_1_fu_706_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln190_fu_724_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln173_fu_676_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln190_fu_728_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln193_fu_744_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_630 : BOOLEAN;
    signal ap_condition_634 : BOOLEAN;
    signal ap_condition_638 : BOOLEAN;
    signal ap_condition_642 : BOOLEAN;
    signal ap_condition_646 : BOOLEAN;
    signal ap_condition_650 : BOOLEAN;
    signal ap_condition_659 : BOOLEAN;
    signal ap_condition_663 : BOOLEAN;
    signal ap_condition_666 : BOOLEAN;
    signal ap_condition_669 : BOOLEAN;
    signal ap_condition_672 : BOOLEAN;
    signal ap_condition_675 : BOOLEAN;
    signal ap_condition_678 : BOOLEAN;
    signal ap_condition_681 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component lz4CompressEngineRun_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component lz4CompressEngineRun_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp1_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1)) then 
                    ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp2_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2)) then 
                    ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_outValue_5_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_const_boolean_1 = ap_condition_659)) then 
                    ap_phi_reg_pp0_iter2_outValue_5_reg_232 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_condition_650)) then 
                    ap_phi_reg_pp0_iter2_outValue_5_reg_232 <= outValue_10_fu_371_p3;
                elsif ((ap_const_boolean_1 = ap_condition_646)) then 
                    ap_phi_reg_pp0_iter2_outValue_5_reg_232 <= match_offset_plus_one_fu_128(15 downto 8);
                elsif ((ap_const_boolean_1 = ap_condition_642)) then 
                    ap_phi_reg_pp0_iter2_outValue_5_reg_232 <= outValue_8_fu_446_p1;
                elsif ((ap_const_boolean_1 = ap_condition_638)) then 
                    ap_phi_reg_pp0_iter2_outValue_5_reg_232 <= lit_outStream_dout;
                elsif ((ap_const_boolean_1 = ap_condition_634)) then 
                    ap_phi_reg_pp0_iter2_outValue_5_reg_232 <= outValue_6_fu_517_p3;
                elsif ((ap_const_boolean_1 = ap_condition_630)) then 
                    ap_phi_reg_pp0_iter2_outValue_5_reg_232 <= outValue_fu_736_p3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1))) then 
                    ap_phi_reg_pp0_iter2_outValue_5_reg_232 <= ap_phi_reg_pp0_iter1_outValue_5_reg_232;
                end if;
            end if; 
        end if;
    end process;

    compressedSize_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    compressedSize_fu_148 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_663)) then 
                    compressedSize_fu_148 <= compressedSize_2_fu_809_p2;
                end if;
            end if; 
        end if;
    end process;

    extra_match_len_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    extra_match_len_fu_120 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_666)) then 
                    extra_match_len_fu_120 <= match_len_ge_15_fu_718_p2;
                end if;
            end if; 
        end if;
    end process;

    inIdx_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    inIdx_fu_116 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_666)) then 
                    inIdx_fu_116 <= inIdx_5_fu_627_p3;
                end if;
            end if; 
        end if;
    end process;

    lit_ending_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    lit_ending_fu_124 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_666)) then 
                    lit_ending_fu_124 <= lit_ending_3_fu_640_p2;
                end if;
            end if; 
        end if;
    end process;

    lit_length_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    lit_length_fu_136 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_condition_666)) then 
                    lit_length_fu_136 <= lit_length_3_fu_690_p3;
                elsif ((ap_const_boolean_1 = ap_condition_669)) then 
                    lit_length_fu_136 <= lit_length_5_fu_531_p3;
                end if;
            end if; 
        end if;
    end process;

    match_length_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    match_length_fu_140 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_condition_666)) then 
                    match_length_fu_140 <= match_length_16_fu_750_p3;
                elsif ((ap_const_boolean_1 = ap_condition_672)) then 
                    match_length_fu_140 <= match_length_18_fu_385_p3;
                end if;
            end if; 
        end if;
    end process;

    match_offset_plus_one_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    match_offset_plus_one_fu_128 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_condition_666)) then 
                    match_offset_plus_one_fu_128 <= match_offset_plus_one_1_fu_758_p2;
                end if;
            end if; 
        end if;
    end process;

    next_state_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    next_state_fu_144(0) <= '0';
                    next_state_fu_144(1) <= '0';
                    next_state_fu_144(2) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_666)) then 
                                        next_state_fu_144(2 downto 0) <= zext_ln116_fu_714_p1(2 downto 0);
                elsif ((ap_const_boolean_1 = ap_condition_669)) then 
                                        next_state_fu_144(2 downto 0) <= select_ln116_fu_539_p3(2 downto 0);
                elsif ((ap_const_boolean_1 = ap_condition_681)) then 
                                        next_state_fu_144(2 downto 0) <= zext_ln218_fu_483_p1(2 downto 0);
                elsif ((ap_const_boolean_1 = ap_condition_678)) then 
                    next_state_fu_144(0) <= '1';
                    next_state_fu_144(1) <= '0';
                    next_state_fu_144(2) <= '1';
                elsif ((ap_const_boolean_1 = ap_condition_675)) then 
                                        next_state_fu_144(2 downto 0) <= select_ln232_fu_426_p3(2 downto 0);
                elsif ((ap_const_boolean_1 = ap_condition_672)) then 
                                        next_state_fu_144(2 downto 0) <= select_ln238_1_fu_393_p3(2 downto 0);
                end if;
            end if; 
        end if;
    end process;

    readOffsetFlag_4_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_2) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                readOffsetFlag_4_reg_207 <= readOffsetFlag_3_fu_401_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_5) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                readOffsetFlag_4_reg_207 <= readOffsetFlag_2_fu_434_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_fu_144 = ap_const_lv32_3) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                readOffsetFlag_4_reg_207 <= readOffsetFlag_1_fu_487_p2;
            elsif (((not((next_state_fu_144 = ap_const_lv32_3)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_2)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_5)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_4)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_1)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_4) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_1) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_0) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                readOffsetFlag_4_reg_207 <= ap_const_lv1_0;
            elsif ((not((or_ln129_fu_332_p2 = ap_const_lv1_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                readOffsetFlag_4_reg_207 <= ap_phi_reg_pp0_iter1_readOffsetFlag_4_reg_207;
            end if; 
        end if;
    end process;

    readOffsetFlag_reg_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (or_ln129_reg_904 = ap_const_lv1_1))) then 
                readOffsetFlag_reg_196 <= readOffsetFlag_4_reg_207;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                readOffsetFlag_reg_196 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    write_lit_length_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    write_lit_length_fu_132 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_condition_666)) then 
                    write_lit_length_fu_132 <= ap_sig_allocacmp_nextLenOffsetValue_2(47 downto 32);
                elsif ((ap_const_boolean_1 = ap_condition_681)) then 
                    write_lit_length_fu_132 <= write_lit_length_4_fu_455_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_outValue_5_reg_232 <= ap_phi_reg_pp0_iter0_outValue_5_reg_232;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_readOffsetFlag_phi_fu_200_p4 = ap_const_lv1_1) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                nextLenOffsetValue_fu_152 <= lenOffset_Stream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln129_reg_904 <= or_ln129_fu_332_p2;
                should_write_reg_942 <= should_write_fu_804_p2;
            end if;
        end if;
    end process;
    next_state_fu_144(31 downto 3) <= "00000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln154_1_fu_575_p2 <= std_logic_vector(unsigned(zext_ln153_fu_567_p1) + unsigned(ap_const_lv17_4));
    add_ln154_fu_585_p2 <= std_logic_vector(unsigned(zext_ln154_fu_581_p1) + unsigned(zext_ln153_1_fu_571_p1));
    add_ln193_fu_744_p2 <= std_logic_vector(unsigned(match_len_tmp_fu_349_p1) + unsigned(ap_const_lv16_FFF1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2)))));
    end process;


    ap_block_pp0_stage0_01001_grp1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg)
    begin
                ap_block_pp0_stage0_01001_grp1 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1));
    end process;


    ap_block_pp0_stage0_01001_grp2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_01001_grp2 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2)))));
    end process;


    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1));
    end process;


    ap_block_pp0_stage0_11001_grp2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_11001_grp2 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2));
    end process;

        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2)))));
    end process;


    ap_block_pp0_stage0_subdone_grp1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg)
    begin
                ap_block_pp0_stage0_subdone_grp1 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1));
    end process;


    ap_block_pp0_stage0_subdone_grp2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_subdone_grp2 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(lenOffset_Stream_empty_n, lit_outStream_empty_n, ap_predicate_op45_read_state2, ap_predicate_op73_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op73_read_state2 = ap_const_boolean_1) and (lit_outStream_empty_n = ap_const_logic_0)) or ((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (lenOffset_Stream_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_grp1_assign_proc : process(lz4Out_full_n, should_write_reg_942)
    begin
                ap_block_state3_pp0_stage0_iter2_grp1 <= ((should_write_reg_942 = ap_const_lv1_1) and (lz4Out_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_grp2_assign_proc : process(lz4Out_eos_full_n, should_write_reg_942)
    begin
                ap_block_state3_pp0_stage0_iter2_grp2 <= ((should_write_reg_942 = ap_const_lv1_1) and (lz4Out_eos_full_n = ap_const_logic_0));
    end process;


    ap_condition_630_assign_proc : process(or_ln129_fu_332_p2, next_state_load_load_fu_343_p1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_630 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_0) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_condition_634_assign_proc : process(or_ln129_fu_332_p2, next_state_load_load_fu_343_p1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_634 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_1) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_condition_638_assign_proc : process(or_ln129_fu_332_p2, ap_block_pp0_stage0_11001, next_state_fu_144)
    begin
                ap_condition_638 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_fu_144 = ap_const_lv32_3) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_condition_642_assign_proc : process(or_ln129_fu_332_p2, next_state_load_load_fu_343_p1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_642 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_4) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_condition_646_assign_proc : process(or_ln129_fu_332_p2, next_state_load_load_fu_343_p1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_646 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_5) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_condition_650_assign_proc : process(or_ln129_fu_332_p2, next_state_load_load_fu_343_p1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_650 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_load_load_fu_343_p1 = ap_const_lv32_2) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_condition_659_assign_proc : process(or_ln129_fu_332_p2, next_state_load_load_fu_343_p1, ap_block_pp0_stage0_11001, next_state_fu_144)
    begin
                ap_condition_659 <= (not((next_state_fu_144 = ap_const_lv32_3)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_2)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_5)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_4)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_1)) and not((next_state_load_load_fu_343_p1 = ap_const_lv32_0)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_condition_663_assign_proc : process(ap_enable_reg_pp0_iter1, or_ln129_fu_332_p2, should_write_fu_804_p2)
    begin
                ap_condition_663 <= ((or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (should_write_fu_804_p2 = ap_const_lv1_1));
    end process;


    ap_condition_666_assign_proc : process(ap_enable_reg_pp0_iter1, or_ln129_fu_332_p2, next_state_load_load_fu_343_p1)
    begin
                ap_condition_666 <= ((next_state_load_load_fu_343_p1 = ap_const_lv32_0) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_669_assign_proc : process(ap_enable_reg_pp0_iter1, or_ln129_fu_332_p2, next_state_load_load_fu_343_p1)
    begin
                ap_condition_669 <= ((next_state_load_load_fu_343_p1 = ap_const_lv32_1) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_672_assign_proc : process(ap_enable_reg_pp0_iter1, or_ln129_fu_332_p2, next_state_load_load_fu_343_p1)
    begin
                ap_condition_672 <= ((next_state_load_load_fu_343_p1 = ap_const_lv32_2) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_675_assign_proc : process(ap_enable_reg_pp0_iter1, or_ln129_fu_332_p2, next_state_load_load_fu_343_p1)
    begin
                ap_condition_675 <= ((next_state_load_load_fu_343_p1 = ap_const_lv32_5) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_678_assign_proc : process(ap_enable_reg_pp0_iter1, or_ln129_fu_332_p2, next_state_load_load_fu_343_p1)
    begin
                ap_condition_678 <= ((next_state_load_load_fu_343_p1 = ap_const_lv32_4) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_681_assign_proc : process(ap_enable_reg_pp0_iter1, or_ln129_fu_332_p2, next_state_fu_144)
    begin
                ap_condition_681 <= ((next_state_fu_144 = ap_const_lv32_3) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_ln129_fu_332_p2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (or_ln129_fu_332_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_phi_mux_readOffsetFlag_phi_fu_200_p4_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, readOffsetFlag_reg_196, readOffsetFlag_4_reg_207, or_ln129_reg_904)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (or_ln129_reg_904 = ap_const_lv1_1))) then 
            ap_phi_mux_readOffsetFlag_phi_fu_200_p4 <= readOffsetFlag_4_reg_207;
        else 
            ap_phi_mux_readOffsetFlag_phi_fu_200_p4 <= readOffsetFlag_reg_196;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_outValue_5_reg_232 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_readOffsetFlag_4_reg_207 <= "X";

    ap_predicate_op45_read_state2_assign_proc : process(or_ln129_fu_332_p2, ap_phi_mux_readOffsetFlag_phi_fu_200_p4)
    begin
                ap_predicate_op45_read_state2 <= ((ap_phi_mux_readOffsetFlag_phi_fu_200_p4 = ap_const_lv1_1) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op73_read_state2_assign_proc : process(or_ln129_fu_332_p2, next_state_fu_144)
    begin
                ap_predicate_op73_read_state2 <= ((next_state_fu_144 = ap_const_lv32_3) and (or_ln129_fu_332_p2 = ap_const_lv1_1));
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_nextLenOffsetValue_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, lenOffset_Stream_dout, or_ln129_fu_332_p2, ap_phi_mux_readOffsetFlag_phi_fu_200_p4, ap_block_pp0_stage0, nextLenOffsetValue_fu_152)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_phi_mux_readOffsetFlag_phi_fu_200_p4 = ap_const_lv1_1) and (or_ln129_fu_332_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_nextLenOffsetValue_2 <= lenOffset_Stream_dout;
        else 
            ap_sig_allocacmp_nextLenOffsetValue_2 <= nextLenOffsetValue_fu_152;
        end if; 
    end process;

    compressedSize_2_fu_809_p2 <= std_logic_vector(unsigned(compressedSize_fu_148) + unsigned(ap_const_lv32_1));
    compressedSize_out <= compressedSize_fu_148;

    compressedSize_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, or_ln129_fu_332_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln129_fu_332_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1))) then 
            compressedSize_out_ap_vld <= ap_const_logic_1;
        else 
            compressedSize_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln129_fu_321_p2 <= "1" when (unsigned(inIdx_fu_116) < unsigned(input_size_3)) else "0";
    icmp_ln157_1_fu_603_p2 <= "1" when (match_off_tmp_fu_353_p3 = ap_const_lv16_309) else "0";
    icmp_ln157_fu_597_p2 <= "1" when (match_len_tmp_fu_349_p1 = ap_const_lv16_309) else "0";
    icmp_ln218_fu_461_p2 <= "1" when (write_lit_length_4_fu_455_p2 = ap_const_lv16_0) else "0";
    inIdx_4_fu_591_p2 <= std_logic_vector(unsigned(add_ln154_fu_585_p2) + unsigned(inIdx_fu_116));
    inIdx_5_fu_627_p3 <= 
        input_size_3 when (is_special_end_fu_609_p2(0) = '1') else 
        inIdx_4_fu_591_p2;
    is_normal_end_fu_621_p2 <= "1" when (or_ln158_fu_615_p2 = ap_const_lv16_0) else "0";
    is_special_end_fu_609_p2 <= (icmp_ln157_fu_597_p2 and icmp_ln157_1_fu_603_p2);

    lenOffset_Stream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, lenOffset_Stream_empty_n, ap_predicate_op45_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op45_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lenOffset_Stream_blk_n <= lenOffset_Stream_empty_n;
        else 
            lenOffset_Stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lenOffset_Stream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op45_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op45_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lenOffset_Stream_read <= ap_const_logic_1;
        else 
            lenOffset_Stream_read <= ap_const_logic_0;
        end if; 
    end process;

    lit_ending_3_fu_640_p2 <= (or_ln167_fu_634_p2 or is_special_end_fu_609_p2);
    lit_len_ge_15_fu_646_p2 <= "1" when (unsigned(lit_length_6_fu_557_p4) > unsigned(ap_const_lv16_E)) else "0";
    lit_len_ge_255_fu_507_p2 <= "1" when (unsigned(lit_length_fu_136) > unsigned(ap_const_lv16_FE)) else "0";
    lit_len_gt_0_fu_652_p2 <= "0" when (lit_length_6_fu_557_p4 = ap_const_lv16_0) else "1";
    lit_length_2_fu_684_p2 <= std_logic_vector(unsigned(lit_length_6_fu_557_p4) + unsigned(ap_const_lv16_FFF1));
    lit_length_3_fu_690_p3 <= 
        lit_length_2_fu_684_p2 when (lit_len_ge_15_fu_646_p2(0) = '1') else 
        ap_const_lv16_0;
    lit_length_4_fu_525_p2 <= std_logic_vector(unsigned(lit_length_fu_136) + unsigned(ap_const_lv16_FF01));
    lit_length_5_fu_531_p3 <= 
        lit_length_4_fu_525_p2 when (lit_len_ge_255_fu_507_p2(0) = '1') else 
        lit_length_fu_136;
    lit_length_6_fu_557_p4 <= ap_sig_allocacmp_nextLenOffsetValue_2(47 downto 32);

    lit_outStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, lit_outStream_empty_n, ap_predicate_op73_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op73_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lit_outStream_blk_n <= lit_outStream_empty_n;
        else 
            lit_outStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lit_outStream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op73_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op73_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lit_outStream_read <= ap_const_logic_1;
        else 
            lit_outStream_read <= ap_const_logic_0;
        end if; 
    end process;


    lz4Out_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, lz4Out_full_n, should_write_reg_942, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (should_write_reg_942 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lz4Out_blk_n <= lz4Out_full_n;
        else 
            lz4Out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lz4Out_din <= ap_phi_reg_pp0_iter2_outValue_5_reg_232;

    lz4Out_eos_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, lz4Out_eos_full_n, should_write_reg_942, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_grp2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp2) and (should_write_reg_942 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lz4Out_eos_blk_n <= lz4Out_eos_full_n;
        else 
            lz4Out_eos_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lz4Out_eos_din <= ap_const_lv1_0;

    lz4Out_eos_write_assign_proc : process(ap_enable_reg_pp0_iter2, should_write_reg_942, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_11001_grp2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp2) and (should_write_reg_942 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lz4Out_eos_write <= ap_const_logic_1;
        else 
            lz4Out_eos_write <= ap_const_logic_0;
        end if; 
    end process;


    lz4Out_write_assign_proc : process(ap_enable_reg_pp0_iter2, should_write_reg_942, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (should_write_reg_942 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lz4Out_write <= ap_const_logic_1;
        else 
            lz4Out_write <= ap_const_logic_0;
        end if; 
    end process;

    match_len_ge_15_fu_718_p2 <= "1" when (unsigned(match_len_tmp_fu_349_p1) > unsigned(ap_const_lv16_E)) else "0";
    match_len_ge_255_fu_361_p2 <= "1" when (unsigned(match_length_fu_140) > unsigned(ap_const_lv16_FE)) else "0";
    match_len_tmp_fu_349_p1 <= ap_sig_allocacmp_nextLenOffsetValue_2(16 - 1 downto 0);
    match_length_16_fu_750_p3 <= 
        add_ln193_fu_744_p2 when (match_len_ge_15_fu_718_p2(0) = '1') else 
        ap_const_lv16_0;
    match_length_17_fu_379_p2 <= std_logic_vector(unsigned(match_length_fu_140) + unsigned(ap_const_lv16_FF01));
    match_length_18_fu_385_p3 <= 
        match_length_17_fu_379_p2 when (match_len_ge_255_fu_361_p2(0) = '1') else 
        match_length_fu_140;
    match_off_tmp_fu_353_p3 <= ap_sig_allocacmp_nextLenOffsetValue_2(31 downto 16);
    match_offset_plus_one_1_fu_758_p2 <= std_logic_vector(unsigned(match_off_tmp_fu_353_p3) + unsigned(ap_const_lv16_1));
    next_state_1_fu_706_p3 <= 
        select_ln176_1_fu_698_p3 when (lit_len_gt_0_fu_652_p2(0) = '1') else 
        ap_const_lv3_4;
    next_state_2_fu_475_p3 <= 
        select_ln219_fu_467_p3 when (icmp_ln218_fu_461_p2(0) = '1') else 
        ap_const_lv3_3;
    next_state_load_load_fu_343_p1 <= next_state_fu_144;
    or_ln129_fu_332_p2 <= (xor_ln129_fu_326_p2 or icmp_ln129_fu_321_p2);
    or_ln158_fu_615_p2 <= (match_off_tmp_fu_353_p3 or match_len_tmp_fu_349_p1);
    or_ln167_fu_634_p2 <= (lit_ending_fu_124 or is_normal_end_fu_621_p2);
    outValue_10_fu_371_p3 <= 
        ap_const_lv8_FF when (match_len_ge_255_fu_361_p2(0) = '1') else 
        trunc_ln236_fu_367_p1;
    outValue_6_fu_517_p3 <= 
        ap_const_lv8_FF when (lit_len_ge_255_fu_507_p2(0) = '1') else 
        trunc_ln205_fu_513_p1;
    outValue_8_fu_446_p1 <= match_offset_plus_one_fu_128(8 - 1 downto 0);
    outValue_fu_736_p3 <= (select_ln173_fu_676_p3 & select_ln190_fu_728_p3);
    readOffsetFlag_1_fu_487_p2 <= (lit_ending_fu_124 and icmp_ln218_fu_461_p2);
    readOffsetFlag_2_fu_434_p2 <= (extra_match_len_fu_120 xor ap_const_lv1_1);
    readOffsetFlag_3_fu_401_p2 <= (match_len_ge_255_fu_361_p2 xor ap_const_lv1_1);
    select_ln116_fu_539_p3 <= 
        ap_const_lv32_1 when (lit_len_ge_255_fu_507_p2(0) = '1') else 
        ap_const_lv32_3;
    select_ln173_fu_676_p3 <= 
        ap_const_lv4_F when (lit_len_ge_15_fu_646_p2(0) = '1') else 
        select_ln174_fu_668_p3;
    select_ln174_fu_668_p3 <= 
        trunc_ln_fu_658_p4 when (lit_len_gt_0_fu_652_p2(0) = '1') else 
        ap_const_lv4_0;
    select_ln176_1_fu_698_p3 <= 
        ap_const_lv3_1 when (lit_len_ge_15_fu_646_p2(0) = '1') else 
        ap_const_lv3_3;
    select_ln190_fu_728_p3 <= 
        ap_const_lv4_F when (match_len_ge_15_fu_718_p2(0) = '1') else 
        trunc_ln190_fu_724_p1;
    select_ln219_fu_467_p3 <= 
        ap_const_lv3_0 when (lit_ending_fu_124(0) = '1') else 
        ap_const_lv3_4;
    select_ln232_fu_426_p3 <= 
        ap_const_lv32_2 when (extra_match_len_fu_120(0) = '1') else 
        ap_const_lv32_0;
    select_ln238_1_fu_393_p3 <= 
        ap_const_lv32_2 when (match_len_ge_255_fu_361_p2(0) = '1') else 
        ap_const_lv32_0;
    should_write_fu_804_p2 <= "1" when (unsigned(compressedSize_fu_148) < unsigned(input_size_3)) else "0";
    trunc_ln190_fu_724_p1 <= ap_sig_allocacmp_nextLenOffsetValue_2(4 - 1 downto 0);
    trunc_ln205_fu_513_p1 <= lit_length_fu_136(8 - 1 downto 0);
    trunc_ln236_fu_367_p1 <= match_length_fu_140(8 - 1 downto 0);
    trunc_ln_fu_658_p4 <= ap_sig_allocacmp_nextLenOffsetValue_2(35 downto 32);
    write_lit_length_4_fu_455_p2 <= std_logic_vector(unsigned(write_lit_length_fu_132) + unsigned(ap_const_lv16_FFFF));
    xor_ln129_fu_326_p2 <= (ap_phi_mux_readOffsetFlag_phi_fu_200_p4 xor ap_const_lv1_1);
    zext_ln116_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(next_state_1_fu_706_p3),32));
    zext_ln153_1_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lit_length_6_fu_557_p4),32));
    zext_ln153_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(match_len_tmp_fu_349_p1),17));
    zext_ln154_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln154_1_fu_575_p2),32));
    zext_ln218_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(next_state_2_fu_475_p3),32));
end behav;
