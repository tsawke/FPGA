-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lz4CompressEngineRun_lzBestMatchFilter_6_65536_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    compressdStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    compressdStream_empty_n : IN STD_LOGIC;
    compressdStream_read : OUT STD_LOGIC;
    compressdStream_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    compressdStream_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    bestMatchStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    bestMatchStream_full_n : IN STD_LOGIC;
    bestMatchStream_write : OUT STD_LOGIC;
    bestMatchStream_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    bestMatchStream_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    input_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_size_empty_n : IN STD_LOGIC;
    input_size_read : OUT STD_LOGIC;
    input_size_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    input_size_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    input_size_c1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_size_c1_full_n : IN STD_LOGIC;
    input_size_c1_write : OUT STD_LOGIC;
    input_size_c1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    input_size_c1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of lz4CompressEngineRun_lzBestMatchFilter_6_65536_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal compressdStream_blk_n : STD_LOGIC;
    signal icmp_ln315_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal bestMatchStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln315_reg_301 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln356_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_size_blk_n : STD_LOGIC;
    signal input_size_c1_blk_n : STD_LOGIC;
    signal input_size_2_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal compare_window_reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal compare_window_16_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal compare_window_17_reg_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal compare_window_18_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal compare_window_19_reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal compare_window_20_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_idle : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_ready : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compressdStream_read : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_write : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out_ap_vld : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out_ap_vld : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out_ap_vld : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out_ap_vld : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out_ap_vld : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out_ap_vld : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i_8_fu_104 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln356_fu_222_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_predicate_op53_write_state10 : BOOLEAN;
    signal ap_block_state10 : BOOLEAN;
    signal tmp_s_fu_228_p15 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_228_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal tmp_s_fu_228_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_228_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_228_p5 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_228_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_228_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_228_p11 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component lz4CompressEngineRun_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        compressdStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        compressdStream_empty_n : IN STD_LOGIC;
        compressdStream_read : OUT STD_LOGIC;
        compressdStream_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        compressdStream_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        bestMatchStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        bestMatchStream_full_n : IN STD_LOGIC;
        bestMatchStream_write : OUT STD_LOGIC;
        bestMatchStream_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        bestMatchStream_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
        compare_window_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        compare_window_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        compare_window_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        compare_window_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        compare_window_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        compare_window : IN STD_LOGIC_VECTOR (31 downto 0);
        input_size_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        compare_window_12_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        compare_window_12_out_ap_vld : OUT STD_LOGIC;
        compare_window_13_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        compare_window_13_out_ap_vld : OUT STD_LOGIC;
        compare_window_14_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        compare_window_14_out_ap_vld : OUT STD_LOGIC;
        compare_window_15_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        compare_window_15_out_ap_vld : OUT STD_LOGIC;
        compare_window_16_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        compare_window_16_out_ap_vld : OUT STD_LOGIC;
        compare_window_17_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        compare_window_17_out_ap_vld : OUT STD_LOGIC );
    end component;


    component lz4CompressEngineRun_sparsemux_13_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (2 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (2 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (2 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (2 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (2 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (2 downto 0);
        din5_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135 : component lz4CompressEngineRun_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start,
        ap_done => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done,
        ap_idle => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_idle,
        ap_ready => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_ready,
        compressdStream_dout => compressdStream_dout,
        compressdStream_empty_n => compressdStream_empty_n,
        compressdStream_read => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compressdStream_read,
        compressdStream_num_data_valid => ap_const_lv4_0,
        compressdStream_fifo_cap => ap_const_lv4_0,
        bestMatchStream_din => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din,
        bestMatchStream_full_n => bestMatchStream_full_n,
        bestMatchStream_write => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_write,
        bestMatchStream_num_data_valid => bestMatchStream_num_data_valid,
        bestMatchStream_fifo_cap => bestMatchStream_fifo_cap,
        compare_window_5 => compare_window_20_reg_337,
        compare_window_4 => compare_window_19_reg_332,
        compare_window_3 => compare_window_18_reg_327,
        compare_window_2 => compare_window_17_reg_322,
        compare_window_1 => compare_window_16_reg_317,
        compare_window => compare_window_reg_312,
        input_size_2 => input_size_2_reg_296,
        compare_window_12_out => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out,
        compare_window_12_out_ap_vld => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out_ap_vld,
        compare_window_13_out => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out,
        compare_window_13_out_ap_vld => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out_ap_vld,
        compare_window_14_out => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out,
        compare_window_14_out_ap_vld => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out_ap_vld,
        compare_window_15_out => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out,
        compare_window_15_out_ap_vld => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out_ap_vld,
        compare_window_16_out => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out,
        compare_window_16_out_ap_vld => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out_ap_vld,
        compare_window_17_out => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out,
        compare_window_17_out_ap_vld => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out_ap_vld);

    sparsemux_13_3_32_1_1_U57 : component lz4CompressEngineRun_sparsemux_13_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "000",
        din0_WIDTH => 32,
        CASE1 => "001",
        din1_WIDTH => 32,
        CASE2 => "010",
        din2_WIDTH => 32,
        CASE3 => "011",
        din3_WIDTH => 32,
        CASE4 => "100",
        din4_WIDTH => 32,
        CASE5 => "101",
        din5_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_17_out,
        din1 => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_16_out,
        din2 => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_15_out,
        din3 => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_14_out,
        din4 => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_13_out,
        din5 => grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compare_window_12_out,
        def => tmp_s_fu_228_p13,
        sel => i_8_fu_104,
        dout => tmp_s_fu_228_p15);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10) and ((icmp_ln356_fu_216_p2 = ap_const_lv1_1) or (icmp_ln315_reg_301 = ap_const_lv1_1)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_ready = ap_const_logic_1)) then 
                    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_8_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln315_fu_156_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                i_8_fu_104 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10) and (icmp_ln356_fu_216_p2 = ap_const_lv1_0) and (icmp_ln315_reg_301 = ap_const_lv1_0))) then 
                i_8_fu_104 <= add_ln356_fu_222_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                compare_window_16_reg_317 <= compressdStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                compare_window_17_reg_322 <= compressdStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                compare_window_18_reg_327 <= compressdStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                compare_window_19_reg_332 <= compressdStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                compare_window_20_reg_337 <= compressdStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                compare_window_reg_312 <= compressdStream_dout;
                icmp_ln315_reg_301 <= icmp_ln315_fu_156_p2;
                input_size_2_reg_296 <= input_size_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, compressdStream_empty_n, icmp_ln315_fu_156_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state10, icmp_ln315_reg_301, icmp_ln356_fu_216_p2, ap_block_state1, grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done, ap_CS_fsm_state8, ap_block_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln315_fu_156_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((icmp_ln315_fu_156_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10) and ((icmp_ln356_fu_216_p2 = ap_const_lv1_1) or (icmp_ln315_reg_301 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10) and (icmp_ln356_fu_216_p2 = ap_const_lv1_0) and (icmp_ln315_reg_301 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln356_fu_222_p2 <= std_logic_vector(unsigned(i_8_fu_104) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state10_blk_assign_proc : process(ap_block_state10)
    begin
        if ((ap_const_boolean_1 = ap_block_state10)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(compressdStream_empty_n)
    begin
        if ((compressdStream_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(compressdStream_empty_n)
    begin
        if ((compressdStream_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(compressdStream_empty_n)
    begin
        if ((compressdStream_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(compressdStream_empty_n)
    begin
        if ((compressdStream_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(compressdStream_empty_n)
    begin
        if ((compressdStream_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done)
    begin
        if ((grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, compressdStream_empty_n, input_size_empty_n, input_size_c1_full_n, icmp_ln315_fu_156_p2)
    begin
                ap_block_state1 <= ((input_size_c1_full_n = ap_const_logic_0) or (input_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or ((icmp_ln315_fu_156_p2 = ap_const_lv1_0) and (compressdStream_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state10_assign_proc : process(bestMatchStream_full_n, ap_predicate_op53_write_state10)
    begin
                ap_block_state10 <= ((bestMatchStream_full_n = ap_const_logic_0) and (ap_predicate_op53_write_state10 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state10, icmp_ln315_reg_301, icmp_ln356_fu_216_p2, ap_block_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10) and ((icmp_ln356_fu_216_p2 = ap_const_lv1_1) or (icmp_ln315_reg_301 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op53_write_state10_assign_proc : process(icmp_ln315_reg_301, icmp_ln356_fu_216_p2)
    begin
                ap_predicate_op53_write_state10 <= ((icmp_ln356_fu_216_p2 = ap_const_lv1_0) and (icmp_ln315_reg_301 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    bestMatchStream_blk_n_assign_proc : process(bestMatchStream_full_n, ap_CS_fsm_state10, icmp_ln315_reg_301, icmp_ln356_fu_216_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln356_fu_216_p2 = ap_const_lv1_0) and (icmp_ln315_reg_301 = ap_const_lv1_0))) then 
            bestMatchStream_blk_n <= bestMatchStream_full_n;
        else 
            bestMatchStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bestMatchStream_din_assign_proc : process(ap_CS_fsm_state10, grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din, ap_CS_fsm_state8, ap_predicate_op53_write_state10, ap_block_state10, tmp_s_fu_228_p15)
    begin
        if (((ap_predicate_op53_write_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10))) then 
            bestMatchStream_din <= tmp_s_fu_228_p15;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            bestMatchStream_din <= grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din;
        else 
            bestMatchStream_din <= grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_din;
        end if; 
    end process;


    bestMatchStream_write_assign_proc : process(ap_CS_fsm_state10, grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_write, ap_CS_fsm_state8, ap_predicate_op53_write_state10, ap_block_state10)
    begin
        if (((ap_predicate_op53_write_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10))) then 
            bestMatchStream_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            bestMatchStream_write <= grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_bestMatchStream_write;
        else 
            bestMatchStream_write <= ap_const_logic_0;
        end if; 
    end process;


    compressdStream_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, compressdStream_empty_n, icmp_ln315_fu_156_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (icmp_ln315_fu_156_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            compressdStream_blk_n <= compressdStream_empty_n;
        else 
            compressdStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    compressdStream_read_assign_proc : process(ap_CS_fsm_state1, compressdStream_empty_n, icmp_ln315_fu_156_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_block_state1, grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compressdStream_read, ap_CS_fsm_state8)
    begin
        if ((((icmp_ln315_fu_156_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1)) or ((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((compressdStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            compressdStream_read <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            compressdStream_read <= grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_compressdStream_read;
        else 
            compressdStream_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start <= grp_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter_fu_135_ap_start_reg;
    icmp_ln315_fu_156_p2 <= "1" when (input_size_dout = ap_const_lv32_0) else "0";
    icmp_ln356_fu_216_p2 <= "1" when (i_8_fu_104 = ap_const_lv3_6) else "0";

    input_size_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_size_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_size_blk_n <= input_size_empty_n;
        else 
            input_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_size_c1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, input_size_c1_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_size_c1_blk_n <= input_size_c1_full_n;
        else 
            input_size_c1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    input_size_c1_din <= input_size_dout;

    input_size_c1_write_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            input_size_c1_write <= ap_const_logic_1;
        else 
            input_size_c1_write <= ap_const_logic_0;
        end if; 
    end process;


    input_size_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            input_size_read <= ap_const_logic_1;
        else 
            input_size_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state10, icmp_ln315_reg_301, icmp_ln356_fu_216_p2, ap_block_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10) and ((icmp_ln356_fu_216_p2 = ap_const_lv1_1) or (icmp_ln315_reg_301 = ap_const_lv1_1)))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_228_p13 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
end behav;
