-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lz4CompressEngineRun_lz4CompressPart1_4096_1_Pipeline_lz4_divide is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    boosterStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    boosterStream_empty_n : IN STD_LOGIC;
    boosterStream_read : OUT STD_LOGIC;
    boosterStream_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    boosterStream_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    lit_outStream_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    lit_outStream_full_n : IN STD_LOGIC;
    lit_outStream_write : OUT STD_LOGIC;
    lit_outStream_num_data_valid : IN STD_LOGIC_VECTOR (12 downto 0);
    lit_outStream_fifo_cap : IN STD_LOGIC_VECTOR (12 downto 0);
    lenOffset_Stream_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    lenOffset_Stream_full_n : IN STD_LOGIC;
    lenOffset_Stream_write : OUT STD_LOGIC;
    lenOffset_Stream_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    lenOffset_Stream_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    empty : IN STD_LOGIC_VECTOR (31 downto 0);
    input_size_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    sub : IN STD_LOGIC_VECTOR (31 downto 0);
    lit_count_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    lit_count_out_ap_vld : OUT STD_LOGIC;
    lit_count_flag_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    lit_count_flag_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of lz4CompressEngineRun_lz4CompressPart1_4096_1_Pipeline_lz4_divide is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln59_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln62_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op31_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln68_reg_362 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_reg_366 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op52_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp1_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_predicate_op57_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp2_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp2 : BOOLEAN;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal lenOffset_Stream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp2 : BOOLEAN;
    signal boosterStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal lit_outStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal lit_count_2_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal tCh_fu_189_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tCh_reg_347 : STD_LOGIC_VECTOR (7 downto 0);
    signal tLen_fu_193_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tLen_reg_352 : STD_LOGIC_VECTOR (7 downto 0);
    signal tOffset_reg_357 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln68_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_11_fu_264_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal lit_count_flag_fu_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal lit_count_fu_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal lit_count_3_fu_236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmpEncodedValue_fu_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage0_01001_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_01001_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_47_fu_209_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln83_fu_252_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln83_fu_260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal match_len_fu_275_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln74_fu_280_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_340 : BOOLEAN;
    signal ap_condition_343 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component lz4CompressEngineRun_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component lz4CompressEngineRun_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp1_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1)) then 
                    ap_block_pp0_stage0_subdone_grp1_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp2_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2)) then 
                    ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_76 <= ap_const_lv32_0;
                elsif (((icmp_ln59_fu_174_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_fu_76 <= i_11_fu_264_p2;
                end if;
            end if; 
        end if;
    end process;

    lit_count_flag_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    lit_count_flag_fu_80(0) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_340)) then 
                    lit_count_flag_fu_80(0) <= '1';
                end if;
            end if; 
        end if;
    end process;

    lit_count_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln59_fu_174_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln83_fu_225_p2 = ap_const_lv1_1) and (icmp_ln68_fu_219_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
                lit_count_fu_84 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln59_fu_174_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln83_fu_225_p2 = ap_const_lv1_0) and (icmp_ln68_fu_219_p2 = ap_const_lv1_1))) then 
                lit_count_fu_84 <= lit_count_3_fu_236_p2;
            end if; 
        end if;
    end process;

    tmpEncodedValue_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmpEncodedValue_fu_88 <= empty;
                elsif ((ap_const_boolean_1 = ap_condition_343)) then 
                    tmpEncodedValue_fu_88 <= boosterStream_dout;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln68_reg_362 <= icmp_ln68_fu_219_p2;
                icmp_ln83_reg_366 <= icmp_ln83_fu_225_p2;
                tCh_reg_347 <= tCh_fu_189_p1;
                tLen_reg_352 <= tmpEncodedValue_fu_88(15 downto 8);
                tOffset_reg_357 <= tmpEncodedValue_fu_88(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                lit_count_2_reg_336 <= lit_count_fu_84;
            end if;
        end if;
    end process;
    lit_count_flag_fu_80(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2)))));
    end process;


    ap_block_pp0_stage0_01001_grp1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg)
    begin
                ap_block_pp0_stage0_01001_grp1 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1));
    end process;


    ap_block_pp0_stage0_01001_grp2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_01001_grp2 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2)))));
    end process;


    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1));
    end process;


    ap_block_pp0_stage0_11001_grp2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_11001_grp2 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2));
    end process;

        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2)))));
    end process;


    ap_block_pp0_stage0_subdone_grp1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp1, ap_block_pp0_stage0_subdone_grp1_done_reg)
    begin
                ap_block_pp0_stage0_subdone_grp1 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp1));
    end process;


    ap_block_pp0_stage0_subdone_grp2_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_subdone_grp2 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2_grp2));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(boosterStream_empty_n, ap_predicate_op31_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op31_read_state2 = ap_const_boolean_1) and (boosterStream_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_grp1_assign_proc : process(lit_outStream_full_n, ap_predicate_op52_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2_grp1 <= ((ap_predicate_op52_write_state3 = ap_const_boolean_1) and (lit_outStream_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_grp2_assign_proc : process(lenOffset_Stream_full_n, ap_predicate_op57_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2_grp2 <= ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (lenOffset_Stream_full_n = ap_const_logic_0));
    end process;


    ap_condition_340_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln59_fu_174_p2, icmp_ln68_fu_219_p2)
    begin
                ap_condition_340 <= ((icmp_ln59_fu_174_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln68_fu_219_p2 = ap_const_lv1_0));
    end process;


    ap_condition_343_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln59_fu_174_p2, icmp_ln62_fu_179_p2)
    begin
                ap_condition_343 <= ((icmp_ln62_fu_179_p2 = ap_const_lv1_1) and (icmp_ln59_fu_174_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln59_fu_174_p2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln59_fu_174_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_predicate_op31_read_state2_assign_proc : process(icmp_ln59_fu_174_p2, icmp_ln62_fu_179_p2)
    begin
                ap_predicate_op31_read_state2 <= ((icmp_ln62_fu_179_p2 = ap_const_lv1_1) and (icmp_ln59_fu_174_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op52_write_state3_assign_proc : process(icmp_ln68_reg_362, icmp_ln83_reg_366)
    begin
                ap_predicate_op52_write_state3 <= ((icmp_ln83_reg_366 = ap_const_lv1_0) and (icmp_ln68_reg_362 = ap_const_lv1_1));
    end process;


    ap_predicate_op57_write_state3_assign_proc : process(icmp_ln68_reg_362, icmp_ln83_reg_366)
    begin
                ap_predicate_op57_write_state3 <= ((icmp_ln83_reg_366 = ap_const_lv1_1) and (icmp_ln68_reg_362 = ap_const_lv1_1));
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    boosterStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, boosterStream_empty_n, ap_predicate_op31_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op31_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            boosterStream_blk_n <= boosterStream_empty_n;
        else 
            boosterStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    boosterStream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op31_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op31_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            boosterStream_read <= ap_const_logic_1;
        else 
            boosterStream_read <= ap_const_logic_0;
        end if; 
    end process;

    i_11_fu_264_p2 <= std_logic_vector(unsigned(zext_ln83_fu_260_p1) + unsigned(i_fu_76));
    icmp_ln59_fu_174_p2 <= "1" when (unsigned(i_fu_76) < unsigned(input_size_4)) else "0";
    icmp_ln62_fu_179_p2 <= "1" when (unsigned(i_fu_76) < unsigned(sub)) else "0";
    icmp_ln68_fu_219_p2 <= "1" when (tmp_47_fu_209_p4 = ap_const_lv20_0) else "0";
    icmp_ln83_fu_225_p2 <= "0" when (tLen_fu_193_p3 = ap_const_lv8_0) else "1";

    lenOffset_Stream_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, lenOffset_Stream_full_n, ap_predicate_op57_write_state3, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_grp2)
    begin
        if (((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lenOffset_Stream_blk_n <= lenOffset_Stream_full_n;
        else 
            lenOffset_Stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lenOffset_Stream_din <= ((lit_count_2_reg_336 & tOffset_reg_357) & zext_ln74_fu_280_p1);

    lenOffset_Stream_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op57_write_state3, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_11001_grp2)
    begin
        if (((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lenOffset_Stream_write <= ap_const_logic_1;
        else 
            lenOffset_Stream_write <= ap_const_logic_0;
        end if; 
    end process;

    lit_count_3_fu_236_p2 <= std_logic_vector(unsigned(lit_count_fu_84) + unsigned(ap_const_lv32_1));
    lit_count_flag_out <= lit_count_flag_fu_80;

    lit_count_flag_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln59_fu_174_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln59_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1))) then 
            lit_count_flag_out_ap_vld <= ap_const_logic_1;
        else 
            lit_count_flag_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lit_count_out <= lit_count_fu_84;

    lit_count_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln59_fu_174_p2, ap_loop_exit_ready, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln59_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1))) then 
            lit_count_out_ap_vld <= ap_const_logic_1;
        else 
            lit_count_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    lit_outStream_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, lit_outStream_full_n, ap_predicate_op52_write_state3, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_predicate_op52_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lit_outStream_blk_n <= lit_outStream_full_n;
        else 
            lit_outStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lit_outStream_din <= tCh_reg_347;

    lit_outStream_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op52_write_state3, ap_block_pp0_stage0_subdone_grp1_done_reg, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_predicate_op52_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lit_outStream_write <= ap_const_logic_1;
        else 
            lit_outStream_write <= ap_const_logic_0;
        end if; 
    end process;

    match_len_fu_275_p2 <= std_logic_vector(unsigned(tLen_reg_352) + unsigned(ap_const_lv8_FC));
    select_ln83_fu_252_p3 <= 
        tLen_fu_193_p3 when (icmp_ln83_fu_225_p2(0) = '1') else 
        ap_const_lv8_1;
    tCh_fu_189_p1 <= tmpEncodedValue_fu_88(8 - 1 downto 0);
    tLen_fu_193_p3 <= tmpEncodedValue_fu_88(15 downto 8);
    tmp_47_fu_209_p4 <= lit_count_fu_84(31 downto 12);
    zext_ln74_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(match_len_fu_275_p2),16));
    zext_ln83_fu_260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln83_fu_252_p3),32));
end behav;
