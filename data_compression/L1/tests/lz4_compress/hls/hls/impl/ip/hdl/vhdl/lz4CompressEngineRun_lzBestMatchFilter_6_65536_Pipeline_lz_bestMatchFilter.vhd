-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lz4CompressEngineRun_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    compressdStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    compressdStream_empty_n : IN STD_LOGIC;
    compressdStream_read : OUT STD_LOGIC;
    compressdStream_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    compressdStream_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    bestMatchStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    bestMatchStream_full_n : IN STD_LOGIC;
    bestMatchStream_write : OUT STD_LOGIC;
    bestMatchStream_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
    bestMatchStream_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
    compare_window_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    compare_window_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    compare_window_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    compare_window_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    compare_window_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    compare_window : IN STD_LOGIC_VECTOR (31 downto 0);
    input_size_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    compare_window_12_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    compare_window_12_out_ap_vld : OUT STD_LOGIC;
    compare_window_13_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    compare_window_13_out_ap_vld : OUT STD_LOGIC;
    compare_window_14_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    compare_window_14_out_ap_vld : OUT STD_LOGIC;
    compare_window_15_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    compare_window_15_out_ap_vld : OUT STD_LOGIC;
    compare_window_16_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    compare_window_16_out_ap_vld : OUT STD_LOGIC;
    compare_window_17_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    compare_window_17_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of lz4CompressEngineRun_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln327_reg_608 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln327_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal compressdStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal bestMatchStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_9_fu_257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal outValue_fu_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal compareValue_fu_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal compareValue_1_fu_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal compareValue_2_fu_104 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal compareValue_3_fu_108 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal compareValue_4_fu_112 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_pp0_stage0_01001_grp1 : BOOLEAN;
    signal match_length_fu_291_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal compareLen_fu_303_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln344_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln342_fu_299_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal compareLen_1_fu_323_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln344_fu_331_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln344_fu_337_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln344_1_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compareLen_2_fu_353_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln344_1_fu_361_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln344_1_fu_367_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln344_2_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compareLen_3_fu_383_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln344_2_fu_391_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln344_2_fu_397_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln344_3_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compareLen_4_fu_413_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln344_3_fu_421_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln344_3_fu_427_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln344_4_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compareLen_5_fu_443_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln344_4_fu_451_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln344_4_fu_457_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln344_5_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln344_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln344_1_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln344_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal best_match_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln344_3_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln344_4_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln344_2_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln344_2_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln344_3_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln344_1_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal best_match_1_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal outValue_3_fu_503_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component lz4CompressEngineRun_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component lz4CompressEngineRun_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if (((ap_loop_exit_ready = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                end if;
            end if; 
        end if;
    end process;

    compareValue_1_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    compareValue_1_fu_100 <= compare_window_2;
                elsif (((icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    compareValue_1_fu_100 <= compareValue_2_fu_104;
                end if;
            end if; 
        end if;
    end process;

    compareValue_2_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    compareValue_2_fu_104 <= compare_window_3;
                elsif (((icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    compareValue_2_fu_104 <= compareValue_3_fu_108;
                end if;
            end if; 
        end if;
    end process;

    compareValue_3_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    compareValue_3_fu_108 <= compare_window_4;
                elsif (((icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    compareValue_3_fu_108 <= compareValue_4_fu_112;
                end if;
            end if; 
        end if;
    end process;

    compareValue_4_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    compareValue_4_fu_112 <= compare_window_5;
                elsif (((icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    compareValue_4_fu_112 <= compressdStream_dout;
                end if;
            end if; 
        end if;
    end process;

    compareValue_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    compareValue_fu_96 <= compare_window_1;
                elsif (((icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    compareValue_fu_96 <= compareValue_1_fu_100;
                end if;
            end if; 
        end if;
    end process;

    i_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln327_fu_251_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_88 <= i_9_fu_257_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_88 <= ap_const_lv32_6;
                end if;
            end if; 
        end if;
    end process;

    outValue_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    outValue_fu_92 <= compare_window;
                elsif (((icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    outValue_fu_92 <= compareValue_fu_96;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln327_reg_608 <= icmp_ln327_fu_251_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln344_1_fu_361_p2 <= std_logic_vector(unsigned(zext_ln342_fu_299_p1) + unsigned(ap_const_lv9_2));
    add_ln344_2_fu_391_p2 <= std_logic_vector(unsigned(zext_ln342_fu_299_p1) + unsigned(ap_const_lv9_3));
    add_ln344_3_fu_421_p2 <= std_logic_vector(unsigned(zext_ln342_fu_299_p1) + unsigned(ap_const_lv9_4));
    add_ln344_4_fu_451_p2 <= std_logic_vector(unsigned(zext_ln342_fu_299_p1) + unsigned(ap_const_lv9_5));
    add_ln344_fu_331_p2 <= std_logic_vector(unsigned(zext_ln342_fu_299_p1) + unsigned(ap_const_lv9_1));
    and_ln344_1_fu_479_p2 <= (best_match_fu_317_p2 and and_ln344_fu_473_p2);
    and_ln344_2_fu_485_p2 <= (xor_ln344_4_fu_467_p2 and xor_ln344_3_fu_437_p2);
    and_ln344_3_fu_491_p2 <= (xor_ln344_2_fu_407_p2 and and_ln344_2_fu_485_p2);
    and_ln344_fu_473_p2 <= (xor_ln344_fu_347_p2 and xor_ln344_1_fu_377_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1_grp1)
    begin
                ap_block_pp0_stage0_01001_grp1 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1_grp1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1));
    end process;


    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1_grp1)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1));
    end process;

        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state2_pp0_stage0_iter1_grp1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1_grp1));
    end process;


    ap_block_state2_pp0_stage0_iter1_grp1_assign_proc : process(compressdStream_empty_n, bestMatchStream_full_n, icmp_ln327_reg_608)
    begin
                ap_block_state2_pp0_stage0_iter1_grp1 <= (((icmp_ln327_reg_608 = ap_const_lv1_1) and (bestMatchStream_full_n = ap_const_logic_0)) or ((icmp_ln327_reg_608 = ap_const_lv1_1) and (compressdStream_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln327_fu_251_p2)
    begin
        if (((icmp_ln327_fu_251_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_8_assign_proc : process(ap_CS_fsm_pp0_stage0, i_fu_88, ap_loop_init, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_8 <= ap_const_lv32_6;
        else 
            ap_sig_allocacmp_i_8 <= i_fu_88;
        end if; 
    end process;


    bestMatchStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bestMatchStream_full_n, icmp_ln327_reg_608, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bestMatchStream_blk_n <= bestMatchStream_full_n;
        else 
            bestMatchStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bestMatchStream_din <= 
        outValue_fu_92 when (best_match_1_fu_497_p2(0) = '1') else 
        outValue_3_fu_503_p5;

    bestMatchStream_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln327_reg_608, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bestMatchStream_write <= ap_const_logic_1;
        else 
            bestMatchStream_write <= ap_const_logic_0;
        end if; 
    end process;

    best_match_1_fu_497_p2 <= (and_ln344_3_fu_491_p2 and and_ln344_1_fu_479_p2);
    best_match_fu_317_p2 <= (icmp_ln344_fu_311_p2 xor ap_const_lv1_1);
    compareLen_1_fu_323_p3 <= compareValue_1_fu_100(15 downto 8);
    compareLen_2_fu_353_p3 <= compareValue_2_fu_104(15 downto 8);
    compareLen_3_fu_383_p3 <= compareValue_3_fu_108(15 downto 8);
    compareLen_4_fu_413_p3 <= compareValue_4_fu_112(15 downto 8);
    compareLen_5_fu_443_p3 <= compressdStream_dout(15 downto 8);
    compareLen_fu_303_p3 <= compareValue_fu_96(15 downto 8);
    compare_window_12_out <= compareValue_4_fu_112;

    compare_window_12_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln327_reg_608, ap_block_pp0_stage0_11001_grp1, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            compare_window_12_out_ap_vld <= ap_const_logic_1;
        else 
            compare_window_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    compare_window_13_out <= compareValue_3_fu_108;

    compare_window_13_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln327_reg_608, ap_block_pp0_stage0_11001_grp1, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            compare_window_13_out_ap_vld <= ap_const_logic_1;
        else 
            compare_window_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    compare_window_14_out <= compareValue_2_fu_104;

    compare_window_14_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln327_reg_608, ap_block_pp0_stage0_11001_grp1, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            compare_window_14_out_ap_vld <= ap_const_logic_1;
        else 
            compare_window_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    compare_window_15_out <= compareValue_1_fu_100;

    compare_window_15_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln327_reg_608, ap_block_pp0_stage0_11001_grp1, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            compare_window_15_out_ap_vld <= ap_const_logic_1;
        else 
            compare_window_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    compare_window_16_out <= compareValue_fu_96;

    compare_window_16_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln327_reg_608, ap_block_pp0_stage0_11001_grp1, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            compare_window_16_out_ap_vld <= ap_const_logic_1;
        else 
            compare_window_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    compare_window_17_out <= outValue_fu_92;

    compare_window_17_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln327_reg_608, ap_block_pp0_stage0_11001_grp1, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            compare_window_17_out_ap_vld <= ap_const_logic_1;
        else 
            compare_window_17_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    compressdStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, compressdStream_empty_n, icmp_ln327_reg_608, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            compressdStream_blk_n <= compressdStream_empty_n;
        else 
            compressdStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    compressdStream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln327_reg_608, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (icmp_ln327_reg_608 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            compressdStream_read <= ap_const_logic_1;
        else 
            compressdStream_read <= ap_const_logic_0;
        end if; 
    end process;

    i_9_fu_257_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_8) + unsigned(ap_const_lv32_1));
    icmp_ln327_fu_251_p2 <= "1" when (unsigned(ap_sig_allocacmp_i_8) < unsigned(input_size_2)) else "0";
    icmp_ln344_1_fu_341_p2 <= "1" when (unsigned(add_ln344_fu_331_p2) < unsigned(zext_ln344_fu_337_p1)) else "0";
    icmp_ln344_2_fu_371_p2 <= "1" when (unsigned(add_ln344_1_fu_361_p2) < unsigned(zext_ln344_1_fu_367_p1)) else "0";
    icmp_ln344_3_fu_401_p2 <= "1" when (unsigned(add_ln344_2_fu_391_p2) < unsigned(zext_ln344_2_fu_397_p1)) else "0";
    icmp_ln344_4_fu_431_p2 <= "1" when (unsigned(add_ln344_3_fu_421_p2) < unsigned(zext_ln344_3_fu_427_p1)) else "0";
    icmp_ln344_5_fu_461_p2 <= "1" when (unsigned(add_ln344_4_fu_451_p2) < unsigned(zext_ln344_4_fu_457_p1)) else "0";
    icmp_ln344_fu_311_p2 <= "1" when (unsigned(match_length_fu_291_p3) < unsigned(compareLen_fu_303_p3)) else "0";
    match_length_fu_291_p3 <= outValue_fu_92(15 downto 8);
    outValue_3_fu_503_p5 <= (ap_const_lv24_0 & outValue_fu_92(7 downto 0));
    xor_ln344_1_fu_377_p2 <= (icmp_ln344_2_fu_371_p2 xor ap_const_lv1_1);
    xor_ln344_2_fu_407_p2 <= (icmp_ln344_3_fu_401_p2 xor ap_const_lv1_1);
    xor_ln344_3_fu_437_p2 <= (icmp_ln344_4_fu_431_p2 xor ap_const_lv1_1);
    xor_ln344_4_fu_467_p2 <= (icmp_ln344_5_fu_461_p2 xor ap_const_lv1_1);
    xor_ln344_fu_347_p2 <= (icmp_ln344_1_fu_341_p2 xor ap_const_lv1_1);
    zext_ln342_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(match_length_fu_291_p3),9));
    zext_ln344_1_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareLen_2_fu_353_p3),9));
    zext_ln344_2_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareLen_3_fu_383_p3),9));
    zext_ln344_3_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareLen_4_fu_413_p3),9));
    zext_ln344_4_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareLen_5_fu_443_p3),9));
    zext_ln344_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareLen_1_fu_323_p3),9));
end behav;
