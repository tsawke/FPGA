-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lz4CompressEngineRun is
port (
    inStream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_empty_n : IN STD_LOGIC;
    inStream_read : OUT STD_LOGIC;
    lz4Out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    lz4Out_full_n : IN STD_LOGIC;
    lz4Out_write : OUT STD_LOGIC;
    lz4Out_eos_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    lz4Out_eos_full_n : IN STD_LOGIC;
    lz4Out_eos_write : OUT STD_LOGIC;
    lz4OutSize_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    lz4OutSize_full_n : IN STD_LOGIC;
    lz4OutSize_write : OUT STD_LOGIC;
    max_lit_limit : OUT STD_LOGIC_VECTOR (31 downto 0);
    input_size : IN STD_LOGIC_VECTOR (31 downto 0);
    core_idx : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    max_lit_limit_ap_vld : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of lz4CompressEngineRun is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lz4CompressEngineRun_lz4CompressEngineRun,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=15.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=13.220000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=58,HLS_SYN_DSP=0,HLS_SYN_FF=3535,HLS_SYN_LUT=7228,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal lzCompress_6_4_65536_6_1_2048_64_U0_ap_start : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_ap_done : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_ap_continue : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_ap_idle : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_ap_ready : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_start_out : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_start_write : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_inStream_read : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_write : STD_LOGIC;
    signal lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_num_data_valid : STD_LOGIC_VECTOR (31 downto 0);
    signal lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_fifo_cap : STD_LOGIC_VECTOR (31 downto 0);
    signal lzCompress_6_4_65536_6_1_2048_64_U0_input_size_c2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal lzCompress_6_4_65536_6_1_2048_64_U0_input_size_c2_write : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_ap_start : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_ap_done : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_ap_continue : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_ap_idle : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_ap_ready : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_start_out : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_start_write : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_compressdStream_read : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_bestMatchStream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal lzBestMatchFilter_6_65536_U0_bestMatchStream_write : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_bestMatchStream_num_data_valid : STD_LOGIC_VECTOR (31 downto 0);
    signal lzBestMatchFilter_6_65536_U0_bestMatchStream_fifo_cap : STD_LOGIC_VECTOR (31 downto 0);
    signal lzBestMatchFilter_6_65536_U0_input_size_read : STD_LOGIC;
    signal lzBestMatchFilter_6_65536_U0_input_size_c1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal lzBestMatchFilter_6_65536_U0_input_size_c1_write : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_ap_start : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_ap_done : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_ap_continue : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_ap_idle : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_ap_ready : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_start_out : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_start_write : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_bestMatchStream_read : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_boosterStream_din : STD_LOGIC_VECTOR (31 downto 0);
    signal lzBooster_255_16384_64_U0_boosterStream_write : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_boosterStream_num_data_valid : STD_LOGIC_VECTOR (31 downto 0);
    signal lzBooster_255_16384_64_U0_boosterStream_fifo_cap : STD_LOGIC_VECTOR (31 downto 0);
    signal lzBooster_255_16384_64_U0_input_size_read : STD_LOGIC;
    signal lzBooster_255_16384_64_U0_input_size_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal lzBooster_255_16384_64_U0_input_size_c_write : STD_LOGIC;
    signal lz4Compress_4096_1_U0_boosterStream_read : STD_LOGIC;
    signal lz4Compress_4096_1_U0_lz4Out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal lz4Compress_4096_1_U0_lz4Out_write : STD_LOGIC;
    signal lz4Compress_4096_1_U0_max_lit_limit : STD_LOGIC_VECTOR (31 downto 0);
    signal lz4Compress_4096_1_U0_input_size_read : STD_LOGIC;
    signal lz4Compress_4096_1_U0_lz4Out_eos_din : STD_LOGIC_VECTOR (0 downto 0);
    signal lz4Compress_4096_1_U0_lz4Out_eos_write : STD_LOGIC;
    signal lz4Compress_4096_1_U0_lz4OutSize_din : STD_LOGIC_VECTOR (31 downto 0);
    signal lz4Compress_4096_1_U0_lz4OutSize_write : STD_LOGIC;
    signal lz4Compress_4096_1_U0_max_lit_limit_ap_vld : STD_LOGIC;
    signal lz4Compress_4096_1_U0_ap_start : STD_LOGIC;
    signal lz4Compress_4096_1_U0_ap_done : STD_LOGIC;
    signal lz4Compress_4096_1_U0_ap_ready : STD_LOGIC;
    signal lz4Compress_4096_1_U0_ap_idle : STD_LOGIC;
    signal lz4Compress_4096_1_U0_ap_continue : STD_LOGIC;
    signal compressdStream_full_n : STD_LOGIC;
    signal compressdStream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal compressdStream_empty_n : STD_LOGIC;
    signal compressdStream_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal compressdStream_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal input_size_c2_full_n : STD_LOGIC;
    signal input_size_c2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal input_size_c2_empty_n : STD_LOGIC;
    signal input_size_c2_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal input_size_c2_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal bestMatchStream_full_n : STD_LOGIC;
    signal bestMatchStream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal bestMatchStream_empty_n : STD_LOGIC;
    signal bestMatchStream_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal bestMatchStream_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal input_size_c1_full_n : STD_LOGIC;
    signal input_size_c1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal input_size_c1_empty_n : STD_LOGIC;
    signal input_size_c1_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal input_size_c1_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal boosterStream_full_n : STD_LOGIC;
    signal boosterStream_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal boosterStream_empty_n : STD_LOGIC;
    signal boosterStream_num_data_valid : STD_LOGIC_VECTOR (3 downto 0);
    signal boosterStream_fifo_cap : STD_LOGIC_VECTOR (3 downto 0);
    signal input_size_c_full_n : STD_LOGIC;
    signal input_size_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal input_size_c_empty_n : STD_LOGIC;
    signal input_size_c_num_data_valid : STD_LOGIC_VECTOR (2 downto 0);
    signal input_size_c_fifo_cap : STD_LOGIC_VECTOR (2 downto 0);
    signal start_for_lzBestMatchFilter_6_65536_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_lzBestMatchFilter_6_65536_U0_full_n : STD_LOGIC;
    signal start_for_lzBestMatchFilter_6_65536_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_lzBestMatchFilter_6_65536_U0_empty_n : STD_LOGIC;
    signal start_for_lzBooster_255_16384_64_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_lzBooster_255_16384_64_U0_full_n : STD_LOGIC;
    signal start_for_lzBooster_255_16384_64_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_lzBooster_255_16384_64_U0_empty_n : STD_LOGIC;
    signal start_for_lz4Compress_4096_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_lz4Compress_4096_1_U0_full_n : STD_LOGIC;
    signal start_for_lz4Compress_4096_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_lz4Compress_4096_1_U0_empty_n : STD_LOGIC;

    component lz4CompressEngineRun_lzCompress_6_4_65536_6_1_2048_64_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        inStream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        inStream_empty_n : IN STD_LOGIC;
        inStream_read : OUT STD_LOGIC;
        compressdStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        compressdStream_full_n : IN STD_LOGIC;
        compressdStream_write : OUT STD_LOGIC;
        compressdStream_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        compressdStream_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
        input_size : IN STD_LOGIC_VECTOR (31 downto 0);
        input_size_c2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_size_c2_full_n : IN STD_LOGIC;
        input_size_c2_write : OUT STD_LOGIC;
        input_size_c2_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        input_size_c2_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component lz4CompressEngineRun_lzBestMatchFilter_6_65536_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        compressdStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        compressdStream_empty_n : IN STD_LOGIC;
        compressdStream_read : OUT STD_LOGIC;
        compressdStream_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        compressdStream_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        bestMatchStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        bestMatchStream_full_n : IN STD_LOGIC;
        bestMatchStream_write : OUT STD_LOGIC;
        bestMatchStream_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        bestMatchStream_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
        input_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        input_size_empty_n : IN STD_LOGIC;
        input_size_read : OUT STD_LOGIC;
        input_size_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        input_size_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        input_size_c1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_size_c1_full_n : IN STD_LOGIC;
        input_size_c1_write : OUT STD_LOGIC;
        input_size_c1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        input_size_c1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component lz4CompressEngineRun_lzBooster_255_16384_64_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        bestMatchStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        bestMatchStream_empty_n : IN STD_LOGIC;
        bestMatchStream_read : OUT STD_LOGIC;
        bestMatchStream_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        bestMatchStream_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        boosterStream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        boosterStream_full_n : IN STD_LOGIC;
        boosterStream_write : OUT STD_LOGIC;
        boosterStream_num_data_valid : IN STD_LOGIC_VECTOR (31 downto 0);
        boosterStream_fifo_cap : IN STD_LOGIC_VECTOR (31 downto 0);
        input_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        input_size_empty_n : IN STD_LOGIC;
        input_size_read : OUT STD_LOGIC;
        input_size_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        input_size_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        input_size_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_size_c_full_n : IN STD_LOGIC;
        input_size_c_write : OUT STD_LOGIC;
        input_size_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        input_size_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component lz4CompressEngineRun_lz4Compress_4096_1_s IS
    port (
        boosterStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        boosterStream_empty_n : IN STD_LOGIC;
        boosterStream_read : OUT STD_LOGIC;
        lz4Out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        lz4Out_full_n : IN STD_LOGIC;
        lz4Out_write : OUT STD_LOGIC;
        max_lit_limit : OUT STD_LOGIC_VECTOR (31 downto 0);
        input_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        input_size_empty_n : IN STD_LOGIC;
        input_size_read : OUT STD_LOGIC;
        lz4Out_eos_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        lz4Out_eos_full_n : IN STD_LOGIC;
        lz4Out_eos_write : OUT STD_LOGIC;
        lz4OutSize_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        lz4OutSize_full_n : IN STD_LOGIC;
        lz4OutSize_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        max_lit_limit_ap_vld : OUT STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component lz4CompressEngineRun_fifo_w32_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (3 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component lz4CompressEngineRun_fifo_w32_d2_S_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (2 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component lz4CompressEngineRun_start_for_lzBestMatchFilter_6_65536_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component lz4CompressEngineRun_start_for_lzBooster_255_16384_64_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component lz4CompressEngineRun_start_for_lz4Compress_4096_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    lzCompress_6_4_65536_6_1_2048_64_U0 : component lz4CompressEngineRun_lzCompress_6_4_65536_6_1_2048_64_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => lzCompress_6_4_65536_6_1_2048_64_U0_ap_start,
        start_full_n => start_for_lzBestMatchFilter_6_65536_U0_full_n,
        ap_done => lzCompress_6_4_65536_6_1_2048_64_U0_ap_done,
        ap_continue => lzCompress_6_4_65536_6_1_2048_64_U0_ap_continue,
        ap_idle => lzCompress_6_4_65536_6_1_2048_64_U0_ap_idle,
        ap_ready => lzCompress_6_4_65536_6_1_2048_64_U0_ap_ready,
        start_out => lzCompress_6_4_65536_6_1_2048_64_U0_start_out,
        start_write => lzCompress_6_4_65536_6_1_2048_64_U0_start_write,
        inStream_dout => inStream_dout,
        inStream_empty_n => inStream_empty_n,
        inStream_read => lzCompress_6_4_65536_6_1_2048_64_U0_inStream_read,
        compressdStream_din => lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_din,
        compressdStream_full_n => compressdStream_full_n,
        compressdStream_write => lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_write,
        compressdStream_num_data_valid => lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_num_data_valid,
        compressdStream_fifo_cap => lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_fifo_cap,
        input_size => input_size,
        input_size_c2_din => lzCompress_6_4_65536_6_1_2048_64_U0_input_size_c2_din,
        input_size_c2_full_n => input_size_c2_full_n,
        input_size_c2_write => lzCompress_6_4_65536_6_1_2048_64_U0_input_size_c2_write,
        input_size_c2_num_data_valid => input_size_c2_num_data_valid,
        input_size_c2_fifo_cap => input_size_c2_fifo_cap);

    lzBestMatchFilter_6_65536_U0 : component lz4CompressEngineRun_lzBestMatchFilter_6_65536_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => lzBestMatchFilter_6_65536_U0_ap_start,
        start_full_n => start_for_lzBooster_255_16384_64_U0_full_n,
        ap_done => lzBestMatchFilter_6_65536_U0_ap_done,
        ap_continue => lzBestMatchFilter_6_65536_U0_ap_continue,
        ap_idle => lzBestMatchFilter_6_65536_U0_ap_idle,
        ap_ready => lzBestMatchFilter_6_65536_U0_ap_ready,
        start_out => lzBestMatchFilter_6_65536_U0_start_out,
        start_write => lzBestMatchFilter_6_65536_U0_start_write,
        compressdStream_dout => compressdStream_dout,
        compressdStream_empty_n => compressdStream_empty_n,
        compressdStream_read => lzBestMatchFilter_6_65536_U0_compressdStream_read,
        compressdStream_num_data_valid => compressdStream_num_data_valid,
        compressdStream_fifo_cap => compressdStream_fifo_cap,
        bestMatchStream_din => lzBestMatchFilter_6_65536_U0_bestMatchStream_din,
        bestMatchStream_full_n => bestMatchStream_full_n,
        bestMatchStream_write => lzBestMatchFilter_6_65536_U0_bestMatchStream_write,
        bestMatchStream_num_data_valid => lzBestMatchFilter_6_65536_U0_bestMatchStream_num_data_valid,
        bestMatchStream_fifo_cap => lzBestMatchFilter_6_65536_U0_bestMatchStream_fifo_cap,
        input_size_dout => input_size_c2_dout,
        input_size_empty_n => input_size_c2_empty_n,
        input_size_read => lzBestMatchFilter_6_65536_U0_input_size_read,
        input_size_num_data_valid => input_size_c2_num_data_valid,
        input_size_fifo_cap => input_size_c2_fifo_cap,
        input_size_c1_din => lzBestMatchFilter_6_65536_U0_input_size_c1_din,
        input_size_c1_full_n => input_size_c1_full_n,
        input_size_c1_write => lzBestMatchFilter_6_65536_U0_input_size_c1_write,
        input_size_c1_num_data_valid => input_size_c1_num_data_valid,
        input_size_c1_fifo_cap => input_size_c1_fifo_cap);

    lzBooster_255_16384_64_U0 : component lz4CompressEngineRun_lzBooster_255_16384_64_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => lzBooster_255_16384_64_U0_ap_start,
        start_full_n => start_for_lz4Compress_4096_1_U0_full_n,
        ap_done => lzBooster_255_16384_64_U0_ap_done,
        ap_continue => lzBooster_255_16384_64_U0_ap_continue,
        ap_idle => lzBooster_255_16384_64_U0_ap_idle,
        ap_ready => lzBooster_255_16384_64_U0_ap_ready,
        start_out => lzBooster_255_16384_64_U0_start_out,
        start_write => lzBooster_255_16384_64_U0_start_write,
        bestMatchStream_dout => bestMatchStream_dout,
        bestMatchStream_empty_n => bestMatchStream_empty_n,
        bestMatchStream_read => lzBooster_255_16384_64_U0_bestMatchStream_read,
        bestMatchStream_num_data_valid => bestMatchStream_num_data_valid,
        bestMatchStream_fifo_cap => bestMatchStream_fifo_cap,
        boosterStream_din => lzBooster_255_16384_64_U0_boosterStream_din,
        boosterStream_full_n => boosterStream_full_n,
        boosterStream_write => lzBooster_255_16384_64_U0_boosterStream_write,
        boosterStream_num_data_valid => lzBooster_255_16384_64_U0_boosterStream_num_data_valid,
        boosterStream_fifo_cap => lzBooster_255_16384_64_U0_boosterStream_fifo_cap,
        input_size_dout => input_size_c1_dout,
        input_size_empty_n => input_size_c1_empty_n,
        input_size_read => lzBooster_255_16384_64_U0_input_size_read,
        input_size_num_data_valid => input_size_c1_num_data_valid,
        input_size_fifo_cap => input_size_c1_fifo_cap,
        input_size_c_din => lzBooster_255_16384_64_U0_input_size_c_din,
        input_size_c_full_n => input_size_c_full_n,
        input_size_c_write => lzBooster_255_16384_64_U0_input_size_c_write,
        input_size_c_num_data_valid => input_size_c_num_data_valid,
        input_size_c_fifo_cap => input_size_c_fifo_cap);

    lz4Compress_4096_1_U0 : component lz4CompressEngineRun_lz4Compress_4096_1_s
    port map (
        boosterStream_dout => boosterStream_dout,
        boosterStream_empty_n => boosterStream_empty_n,
        boosterStream_read => lz4Compress_4096_1_U0_boosterStream_read,
        lz4Out_din => lz4Compress_4096_1_U0_lz4Out_din,
        lz4Out_full_n => lz4Out_full_n,
        lz4Out_write => lz4Compress_4096_1_U0_lz4Out_write,
        max_lit_limit => lz4Compress_4096_1_U0_max_lit_limit,
        input_size_dout => input_size_c_dout,
        input_size_empty_n => input_size_c_empty_n,
        input_size_read => lz4Compress_4096_1_U0_input_size_read,
        lz4Out_eos_din => lz4Compress_4096_1_U0_lz4Out_eos_din,
        lz4Out_eos_full_n => lz4Out_eos_full_n,
        lz4Out_eos_write => lz4Compress_4096_1_U0_lz4Out_eos_write,
        lz4OutSize_din => lz4Compress_4096_1_U0_lz4OutSize_din,
        lz4OutSize_full_n => lz4OutSize_full_n,
        lz4OutSize_write => lz4Compress_4096_1_U0_lz4OutSize_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        max_lit_limit_ap_vld => lz4Compress_4096_1_U0_max_lit_limit_ap_vld,
        ap_start => lz4Compress_4096_1_U0_ap_start,
        ap_done => lz4Compress_4096_1_U0_ap_done,
        ap_ready => lz4Compress_4096_1_U0_ap_ready,
        ap_idle => lz4Compress_4096_1_U0_ap_idle,
        ap_continue => lz4Compress_4096_1_U0_ap_continue);

    compressdStream_U : component lz4CompressEngineRun_fifo_w32_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_din,
        if_full_n => compressdStream_full_n,
        if_write => lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_write,
        if_dout => compressdStream_dout,
        if_empty_n => compressdStream_empty_n,
        if_read => lzBestMatchFilter_6_65536_U0_compressdStream_read,
        if_num_data_valid => compressdStream_num_data_valid,
        if_fifo_cap => compressdStream_fifo_cap);

    input_size_c2_U : component lz4CompressEngineRun_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lzCompress_6_4_65536_6_1_2048_64_U0_input_size_c2_din,
        if_full_n => input_size_c2_full_n,
        if_write => lzCompress_6_4_65536_6_1_2048_64_U0_input_size_c2_write,
        if_dout => input_size_c2_dout,
        if_empty_n => input_size_c2_empty_n,
        if_read => lzBestMatchFilter_6_65536_U0_input_size_read,
        if_num_data_valid => input_size_c2_num_data_valid,
        if_fifo_cap => input_size_c2_fifo_cap);

    bestMatchStream_U : component lz4CompressEngineRun_fifo_w32_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lzBestMatchFilter_6_65536_U0_bestMatchStream_din,
        if_full_n => bestMatchStream_full_n,
        if_write => lzBestMatchFilter_6_65536_U0_bestMatchStream_write,
        if_dout => bestMatchStream_dout,
        if_empty_n => bestMatchStream_empty_n,
        if_read => lzBooster_255_16384_64_U0_bestMatchStream_read,
        if_num_data_valid => bestMatchStream_num_data_valid,
        if_fifo_cap => bestMatchStream_fifo_cap);

    input_size_c1_U : component lz4CompressEngineRun_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lzBestMatchFilter_6_65536_U0_input_size_c1_din,
        if_full_n => input_size_c1_full_n,
        if_write => lzBestMatchFilter_6_65536_U0_input_size_c1_write,
        if_dout => input_size_c1_dout,
        if_empty_n => input_size_c1_empty_n,
        if_read => lzBooster_255_16384_64_U0_input_size_read,
        if_num_data_valid => input_size_c1_num_data_valid,
        if_fifo_cap => input_size_c1_fifo_cap);

    boosterStream_U : component lz4CompressEngineRun_fifo_w32_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lzBooster_255_16384_64_U0_boosterStream_din,
        if_full_n => boosterStream_full_n,
        if_write => lzBooster_255_16384_64_U0_boosterStream_write,
        if_dout => boosterStream_dout,
        if_empty_n => boosterStream_empty_n,
        if_read => lz4Compress_4096_1_U0_boosterStream_read,
        if_num_data_valid => boosterStream_num_data_valid,
        if_fifo_cap => boosterStream_fifo_cap);

    input_size_c_U : component lz4CompressEngineRun_fifo_w32_d2_S_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => lzBooster_255_16384_64_U0_input_size_c_din,
        if_full_n => input_size_c_full_n,
        if_write => lzBooster_255_16384_64_U0_input_size_c_write,
        if_dout => input_size_c_dout,
        if_empty_n => input_size_c_empty_n,
        if_read => lz4Compress_4096_1_U0_input_size_read,
        if_num_data_valid => input_size_c_num_data_valid,
        if_fifo_cap => input_size_c_fifo_cap);

    start_for_lzBestMatchFilter_6_65536_U0_U : component lz4CompressEngineRun_start_for_lzBestMatchFilter_6_65536_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_lzBestMatchFilter_6_65536_U0_din,
        if_full_n => start_for_lzBestMatchFilter_6_65536_U0_full_n,
        if_write => lzCompress_6_4_65536_6_1_2048_64_U0_start_write,
        if_dout => start_for_lzBestMatchFilter_6_65536_U0_dout,
        if_empty_n => start_for_lzBestMatchFilter_6_65536_U0_empty_n,
        if_read => lzBestMatchFilter_6_65536_U0_ap_ready);

    start_for_lzBooster_255_16384_64_U0_U : component lz4CompressEngineRun_start_for_lzBooster_255_16384_64_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_lzBooster_255_16384_64_U0_din,
        if_full_n => start_for_lzBooster_255_16384_64_U0_full_n,
        if_write => lzBestMatchFilter_6_65536_U0_start_write,
        if_dout => start_for_lzBooster_255_16384_64_U0_dout,
        if_empty_n => start_for_lzBooster_255_16384_64_U0_empty_n,
        if_read => lzBooster_255_16384_64_U0_ap_ready);

    start_for_lz4Compress_4096_1_U0_U : component lz4CompressEngineRun_start_for_lz4Compress_4096_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_lz4Compress_4096_1_U0_din,
        if_full_n => start_for_lz4Compress_4096_1_U0_full_n,
        if_write => lzBooster_255_16384_64_U0_start_write,
        if_dout => start_for_lz4Compress_4096_1_U0_dout,
        if_empty_n => start_for_lz4Compress_4096_1_U0_empty_n,
        if_read => lz4Compress_4096_1_U0_ap_ready);




    ap_done <= lz4Compress_4096_1_U0_ap_done;
    ap_idle <= (lzCompress_6_4_65536_6_1_2048_64_U0_ap_idle and lzBooster_255_16384_64_U0_ap_idle and lzBestMatchFilter_6_65536_U0_ap_idle and lz4Compress_4096_1_U0_ap_idle);
    ap_ready <= lzCompress_6_4_65536_6_1_2048_64_U0_ap_ready;
    inStream_read <= lzCompress_6_4_65536_6_1_2048_64_U0_inStream_read;
    lz4Compress_4096_1_U0_ap_continue <= ap_const_logic_1;
    lz4Compress_4096_1_U0_ap_start <= start_for_lz4Compress_4096_1_U0_empty_n;
    lz4OutSize_din <= lz4Compress_4096_1_U0_lz4OutSize_din;
    lz4OutSize_write <= lz4Compress_4096_1_U0_lz4OutSize_write;
    lz4Out_din <= lz4Compress_4096_1_U0_lz4Out_din;
    lz4Out_eos_din <= lz4Compress_4096_1_U0_lz4Out_eos_din;
    lz4Out_eos_write <= lz4Compress_4096_1_U0_lz4Out_eos_write;
    lz4Out_write <= lz4Compress_4096_1_U0_lz4Out_write;
    lzBestMatchFilter_6_65536_U0_ap_continue <= ap_const_logic_1;
    lzBestMatchFilter_6_65536_U0_ap_start <= start_for_lzBestMatchFilter_6_65536_U0_empty_n;
    lzBestMatchFilter_6_65536_U0_bestMatchStream_fifo_cap <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(bestMatchStream_fifo_cap),4))),32));
    lzBestMatchFilter_6_65536_U0_bestMatchStream_num_data_valid <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(bestMatchStream_num_data_valid),4))),32));
    lzBooster_255_16384_64_U0_ap_continue <= ap_const_logic_1;
    lzBooster_255_16384_64_U0_ap_start <= start_for_lzBooster_255_16384_64_U0_empty_n;
    lzBooster_255_16384_64_U0_boosterStream_fifo_cap <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(boosterStream_fifo_cap),4))),32));
    lzBooster_255_16384_64_U0_boosterStream_num_data_valid <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(boosterStream_num_data_valid),4))),32));
    lzCompress_6_4_65536_6_1_2048_64_U0_ap_continue <= ap_const_logic_1;
    lzCompress_6_4_65536_6_1_2048_64_U0_ap_start <= ap_start;
    lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_fifo_cap <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(compressdStream_fifo_cap),4))),32));
    lzCompress_6_4_65536_6_1_2048_64_U0_compressdStream_num_data_valid <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(IEEE.numeric_std.resize(unsigned(compressdStream_num_data_valid),4))),32));
    max_lit_limit <= lz4Compress_4096_1_U0_max_lit_limit;
    max_lit_limit_ap_vld <= lz4Compress_4096_1_U0_max_lit_limit_ap_vld;
    start_for_lz4Compress_4096_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_lzBestMatchFilter_6_65536_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_lzBooster_255_16384_64_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
