-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lz4CompressEngineRun_lzCompress_6_4_65536_6_1_2048_64_Outline_VITIS_LOOP_82_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inStream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_empty_n : IN STD_LOGIC;
    inStream_read : OUT STD_LOGIC;
    present_window_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_4_out_ap_vld : OUT STD_LOGIC;
    present_window_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_3_out_ap_vld : OUT STD_LOGIC;
    present_window_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_2_out_ap_vld : OUT STD_LOGIC;
    present_window_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_1_out_ap_vld : OUT STD_LOGIC;
    present_window_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_out_ap_vld : OUT STD_LOGIC;
    arrayidx55_promoted157_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    arrayidx55_promoted157_out_ap_vld : OUT STD_LOGIC;
    arrayidx46_3_promoted155_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    arrayidx46_3_promoted155_out_ap_vld : OUT STD_LOGIC;
    arrayidx65_promoted153_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    arrayidx65_promoted153_out_ap_vld : OUT STD_LOGIC;
    arrayidx61_promoted151_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    arrayidx61_promoted151_out_ap_vld : OUT STD_LOGIC;
    arrayidx58_promoted149_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    arrayidx58_promoted149_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of lz4CompressEngineRun_lzCompress_6_4_65536_6_1_2048_64_Outline_VITIS_LOOP_82_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal inStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln82_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_58 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln82_fu_242_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal i_load_fu_183_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal arrayidx58_promoted149_fu_62 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal arrayidx61_promoted151_fu_66 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal arrayidx65_promoted153_fu_70 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal arrayidx46_3_promoted155_fu_74 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal arrayidx55_promoted157_fu_78 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal present_window_fu_82 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal present_window_1_fu_86 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal present_window_2_fu_90 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal present_window_3_fu_94 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal present_window_4_fu_98 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_1_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_1_fu_58 <= ap_const_lv3_1;
            elsif (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_fu_58 <= add_ln82_fu_242_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_load_fu_183_p1 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                arrayidx46_3_promoted155_fu_74 <= inStream_dout;
                present_window_3_fu_94 <= inStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((i_load_fu_183_p1 = ap_const_lv3_3)) and not((i_load_fu_183_p1 = ap_const_lv3_2)) and not((i_load_fu_183_p1 = ap_const_lv3_1)) and not((i_load_fu_183_p1 = ap_const_lv3_4)) and (ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                arrayidx55_promoted157_fu_78 <= inStream_dout;
                present_window_4_fu_98 <= inStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_load_fu_183_p1 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                arrayidx58_promoted149_fu_62 <= inStream_dout;
                present_window_fu_82 <= inStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_load_fu_183_p1 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                arrayidx61_promoted151_fu_66 <= inStream_dout;
                present_window_1_fu_86 <= inStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((i_load_fu_183_p1 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                arrayidx65_promoted153_fu_70 <= inStream_dout;
                present_window_2_fu_90 <= inStream_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln82_fu_242_p2 <= std_logic_vector(unsigned(i_1_fu_58) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_assign_proc : process(inStream_empty_n, icmp_ln82_fu_186_p2)
    begin
                ap_block_state2 <= ((icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (inStream_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx46_3_promoted155_out <= arrayidx46_3_promoted155_fu_74;

    arrayidx46_3_promoted155_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            arrayidx46_3_promoted155_out_ap_vld <= ap_const_logic_1;
        else 
            arrayidx46_3_promoted155_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx55_promoted157_out <= arrayidx55_promoted157_fu_78;

    arrayidx55_promoted157_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            arrayidx55_promoted157_out_ap_vld <= ap_const_logic_1;
        else 
            arrayidx55_promoted157_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx58_promoted149_out <= arrayidx58_promoted149_fu_62;

    arrayidx58_promoted149_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            arrayidx58_promoted149_out_ap_vld <= ap_const_logic_1;
        else 
            arrayidx58_promoted149_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx61_promoted151_out <= arrayidx61_promoted151_fu_66;

    arrayidx61_promoted151_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            arrayidx61_promoted151_out_ap_vld <= ap_const_logic_1;
        else 
            arrayidx61_promoted151_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx65_promoted153_out <= arrayidx65_promoted153_fu_70;

    arrayidx65_promoted153_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            arrayidx65_promoted153_out_ap_vld <= ap_const_logic_1;
        else 
            arrayidx65_promoted153_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    i_load_fu_183_p1 <= i_1_fu_58;
    icmp_ln82_fu_186_p2 <= "1" when (i_1_fu_58 = ap_const_lv3_6) else "0";

    inStream_blk_n_assign_proc : process(inStream_empty_n, ap_CS_fsm_state2, icmp_ln82_fu_186_p2)
    begin
        if (((icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            inStream_blk_n <= inStream_empty_n;
        else 
            inStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inStream_read_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            inStream_read <= ap_const_logic_1;
        else 
            inStream_read <= ap_const_logic_0;
        end if; 
    end process;

    present_window_1_out <= present_window_1_fu_86;

    present_window_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            present_window_1_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    present_window_2_out <= present_window_2_fu_90;

    present_window_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            present_window_2_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    present_window_3_out <= present_window_3_fu_94;

    present_window_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            present_window_3_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    present_window_4_out <= present_window_4_fu_98;

    present_window_4_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            present_window_4_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    present_window_out <= present_window_fu_82;

    present_window_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln82_fu_186_p2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (icmp_ln82_fu_186_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            present_window_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
