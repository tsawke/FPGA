// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module lz4CompressEngineRun_lzBooster_255_16384_64_Pipeline_lz_booster (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bestMatchStream_dout,
        bestMatchStream_empty_n,
        bestMatchStream_read,
        bestMatchStream_num_data_valid,
        bestMatchStream_fifo_cap,
        boosterStream_din,
        boosterStream_full_n,
        boosterStream_write,
        boosterStream_num_data_valid,
        boosterStream_fifo_cap,
        sub,
        outValue_out,
        outValue_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] bestMatchStream_dout;
input   bestMatchStream_empty_n;
output   bestMatchStream_read;
input  [3:0] bestMatchStream_num_data_valid;
input  [3:0] bestMatchStream_fifo_cap;
output  [31:0] boosterStream_din;
input   boosterStream_full_n;
output   boosterStream_write;
input  [31:0] boosterStream_num_data_valid;
input  [31:0] boosterStream_fifo_cap;
input  [31:0] sub;
output  [31:0] outValue_out;
output   outValue_out_ap_vld;

reg ap_idle;
reg bestMatchStream_read;
reg boosterStream_write;
reg outValue_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln573_reg_629;
reg    ap_block_state2_pp0_stage0_iter1_grp1;
reg   [0:0] icmp_ln573_reg_629_pp0_iter2_reg;
reg   [0:0] icmp_ln589_reg_663;
reg   [0:0] and_ln591_1_reg_672;
reg   [0:0] outFlag_reg_676;
reg    ap_predicate_op112_write_state4;
reg    ap_block_state4_pp0_stage0_iter3_grp1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln573_fu_244_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bestMatchStream_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg    boosterStream_blk_n;
wire    ap_block_pp0_stage0_11001_grp0;
wire    ap_block_pp0_stage0_subdone_grp0;
reg   [31:0] i_4_reg_622;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] i_4_reg_622_pp0_iter1_reg;
reg   [0:0] icmp_ln573_reg_629_pp0_iter1_reg;
reg   [31:0] outValue_2_reg_633;
reg    ap_block_pp0_stage0_11001_grp1;
wire   [7:0] tCh_fu_264_p1;
reg   [7:0] tCh_reg_640;
reg   [7:0] tLen_reg_645;
reg   [15:0] tOffset_reg_651;
wire   [0:0] boostFlag_fu_295_p2;
reg   [0:0] boostFlag_reg_656;
wire   [0:0] icmp_ln589_fu_319_p2;
wire   [0:0] and_ln591_1_fu_364_p2;
wire   [0:0] outFlag_fu_382_p2;
wire   [0:0] icmp_ln601_fu_387_p2;
reg   [0:0] icmp_ln601_reg_680;
reg   [31:0] outValue_load_reg_689;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [13:0] local_mem_address0;
wire   [13:0] local_mem_address1;
wire   [7:0] local_mem_q1;
reg   [0:0] ap_phi_mux_matchFlag_426_phi_fu_176_p4;
wire   [0:0] ap_phi_reg_pp0_iter2_matchFlag_426_reg_173;
reg   [7:0] ap_phi_mux_skip_len_424_phi_fu_186_p4;
wire   [7:0] skip_len_7_fu_402_p3;
wire   [7:0] ap_phi_reg_pp0_iter2_skip_len_424_reg_183;
reg   [7:0] ap_phi_mux_empty_phi_fu_196_p10;
wire   [7:0] ap_phi_reg_pp0_iter3_empty_reg_193;
wire   [63:0] zext_ln586_fu_301_p1;
wire   [63:0] zext_ln613_fu_331_p1;
wire   [63:0] zext_ln613_2_fu_392_p1;
wire   [63:0] zext_ln613_1_fu_519_p1;
reg   [15:0] skip_len_fu_78;
wire   [15:0] skip_len_5_fu_325_p2;
wire   [15:0] zext_ln566_fu_410_p1;
wire   [15:0] zext_ln614_fu_461_p1;
wire    ap_loop_init;
reg   [7:0] match_ch_fu_82;
reg   [7:0] ap_sig_allocacmp_match_ch_load;
reg   [31:0] i_fu_86;
wire   [31:0] i_5_fu_250_p2;
reg   [31:0] ap_sig_allocacmp_i_4;
wire    ap_block_pp0_stage0;
reg   [31:0] outValue_fu_90;
wire   [31:0] outValue_1_fu_509_p4;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] matchFlag_fu_94;
reg   [31:0] match_len_fu_98;
wire   [31:0] match_len_3_fu_489_p2;
reg   [31:0] match_loc_fu_102;
wire   [31:0] match_loc_5_fu_373_p2;
wire   [31:0] match_loc_4_fu_495_p2;
reg    ap_block_pp0_stage0_01001_grp1;
reg    local_mem_we0_local;
reg    local_mem_ce0_local;
reg    local_mem_ce1_local;
reg   [13:0] local_mem_address1_local;
wire   [1:0] tmp_fu_285_p4;
wire   [13:0] trunc_ln573_1_fu_261_p1;
wire   [13:0] trunc_ln573_fu_315_p1;
wire   [0:0] icmp_ln591_1_fu_353_p2;
wire   [0:0] icmp_ln591_fu_347_p2;
wire   [0:0] and_ln591_fu_358_p2;
wire   [31:0] zext_ln597_fu_370_p1;
wire   [13:0] trunc_ln562_1_fu_378_p1;
wire   [7:0] skip_len_6_fu_397_p2;
wire   [7:0] trunc_ln594_fu_505_p1;
wire   [13:0] trunc_ln562_fu_501_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_39;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_predicate_op51_load_state3;
reg    ap_enable_operation_51;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_predicate_op107_load_state4;
reg    ap_enable_operation_107;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_predicate_op67_load_state3;
reg    ap_enable_operation_67;
reg    ap_predicate_op109_load_state4;
reg    ap_enable_operation_109;
reg    ap_predicate_op101_load_state3;
reg    ap_enable_operation_101;
reg    ap_predicate_op114_load_state4;
reg    ap_enable_operation_114;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_274;
reg    ap_condition_543;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 skip_len_fu_78 = 16'd0;
#0 match_ch_fu_82 = 8'd0;
#0 i_fu_86 = 32'd0;
#0 outValue_fu_90 = 32'd0;
#0 matchFlag_fu_94 = 1'd0;
#0 match_len_fu_98 = 32'd0;
#0 match_loc_fu_102 = 32'd0;
#0 ap_done_reg = 1'b0;
end

lz4CompressEngineRun_lzBooster_255_16384_64_Pipeline_lz_booster_local_mem_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
local_mem_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_mem_address0),
    .ce0(local_mem_ce0_local),
    .we0(local_mem_we0_local),
    .d0(tCh_fu_264_p1),
    .address1(local_mem_address1),
    .ce1(local_mem_ce1_local),
    .q1(local_mem_q1)
);

lz4CompressEngineRun_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln573_fu_244_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_86 <= i_5_fu_250_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_86 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd1 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        matchFlag_fu_94 <= 1'd1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (outFlag_fu_382_p2 == 1'd1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        matchFlag_fu_94 <= ap_phi_mux_matchFlag_426_phi_fu_176_p4;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd1) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)))) begin
        matchFlag_fu_94 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd0) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        matchFlag_fu_94 <= boostFlag_reg_656;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        match_len_fu_98 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd1 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        match_len_fu_98 <= match_len_3_fu_489_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd1) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (outFlag_fu_382_p2 == 1'd1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd0) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)))) begin
        match_len_fu_98 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        match_loc_fu_102 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd1 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        match_loc_fu_102 <= match_loc_4_fu_495_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd1) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (outFlag_fu_382_p2 == 1'd1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd0) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)))) begin
        match_loc_fu_102 <= match_loc_5_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd1 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        outValue_fu_90 <= outValue_1_fu_509_p4;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd1) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (outFlag_fu_382_p2 == 1'd1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd0) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)))) begin
        outValue_fu_90 <= outValue_2_reg_633;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (outFlag_fu_382_p2 == 1'd1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        skip_len_fu_78 <= zext_ln614_fu_461_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd1 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd1) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)))) begin
        skip_len_fu_78 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln601_fu_387_p2 == 1'd0) & (outFlag_fu_382_p2 == 1'd0) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        skip_len_fu_78 <= zext_ln566_fu_410_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd0) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0))) begin
        skip_len_fu_78 <= skip_len_5_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        and_ln591_1_reg_672 <= and_ln591_1_fu_364_p2;
        icmp_ln589_reg_663 <= icmp_ln589_fu_319_p2;
        icmp_ln601_reg_680 <= icmp_ln601_fu_387_p2;
        outFlag_reg_676 <= outFlag_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_4_reg_622 <= ap_sig_allocacmp_i_4;
        i_4_reg_622_pp0_iter1_reg <= i_4_reg_622;
        icmp_ln573_reg_629 <= icmp_ln573_fu_244_p2;
        icmp_ln573_reg_629_pp0_iter1_reg <= icmp_ln573_reg_629;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        boostFlag_reg_656 <= boostFlag_fu_295_p2;
        outValue_2_reg_633 <= bestMatchStream_dout;
        tCh_reg_640 <= tCh_fu_264_p1;
        tLen_reg_645 <= {{bestMatchStream_dout[15:8]}};
        tOffset_reg_651 <= {{bestMatchStream_dout[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln573_reg_629_pp0_iter2_reg <= icmp_ln573_reg_629_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        match_ch_fu_82 <= ap_phi_mux_empty_phi_fu_196_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        outValue_load_reg_689 <= outValue_fu_90;
    end
end

always @ (*) begin
    if (((icmp_ln573_fu_244_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((outFlag_reg_676 == 1'd1) & (icmp_ln589_reg_663 == 1'd1) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0) & (1'd0 == and_ln591_1_reg_672)) | ((icmp_ln589_reg_663 == 1'd1) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0) & (1'd1 == and_ln591_1_reg_672)) | ((outFlag_reg_676 == 1'd0) & (icmp_ln589_reg_663 == 1'd1) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0) & (1'd0 == and_ln591_1_reg_672) & (icmp_ln601_reg_680 == 1'd1)) | ((outFlag_reg_676 == 1'd0) & (icmp_ln589_reg_663 == 1'd1) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0) & (1'd0 == and_ln591_1_reg_672) & (icmp_ln601_reg_680 == 1'd0)) | ((icmp_ln589_reg_663 == 1'd0) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0)))) begin
        ap_phi_mux_empty_phi_fu_196_p10 = local_mem_q1;
    end else begin
        ap_phi_mux_empty_phi_fu_196_p10 = ap_phi_reg_pp0_iter3_empty_reg_193;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_274)) begin
        if ((icmp_ln601_fu_387_p2 == 1'd1)) begin
            ap_phi_mux_matchFlag_426_phi_fu_176_p4 = 1'd0;
        end else if ((icmp_ln601_fu_387_p2 == 1'd0)) begin
            ap_phi_mux_matchFlag_426_phi_fu_176_p4 = boostFlag_reg_656;
        end else begin
            ap_phi_mux_matchFlag_426_phi_fu_176_p4 = ap_phi_reg_pp0_iter2_matchFlag_426_reg_173;
        end
    end else begin
        ap_phi_mux_matchFlag_426_phi_fu_176_p4 = ap_phi_reg_pp0_iter2_matchFlag_426_reg_173;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_274)) begin
        if ((icmp_ln601_fu_387_p2 == 1'd1)) begin
            ap_phi_mux_skip_len_424_phi_fu_186_p4 = 8'd0;
        end else if ((icmp_ln601_fu_387_p2 == 1'd0)) begin
            ap_phi_mux_skip_len_424_phi_fu_186_p4 = skip_len_7_fu_402_p3;
        end else begin
            ap_phi_mux_skip_len_424_phi_fu_186_p4 = ap_phi_reg_pp0_iter2_skip_len_424_reg_183;
        end
    end else begin
        ap_phi_mux_skip_len_424_phi_fu_186_p4 = ap_phi_reg_pp0_iter2_skip_len_424_reg_183;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_4 = 32'd0;
    end else begin
        ap_sig_allocacmp_i_4 = i_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_match_ch_load = ap_phi_mux_empty_phi_fu_196_p10;
    end else begin
        ap_sig_allocacmp_match_ch_load = match_ch_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (icmp_ln573_reg_629 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bestMatchStream_blk_n = bestMatchStream_empty_n;
    end else begin
        bestMatchStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln573_reg_629 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bestMatchStream_read = 1'b1;
    end else begin
        bestMatchStream_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_predicate_op112_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        boosterStream_blk_n = boosterStream_full_n;
    end else begin
        boosterStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_predicate_op112_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        boosterStream_write = 1'b1;
    end else begin
        boosterStream_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_543)) begin
        if (((1'd1 == and_ln591_1_fu_364_p2) & (icmp_ln589_fu_319_p2 == 1'd1))) begin
            local_mem_address1_local = zext_ln613_1_fu_519_p1;
        end else if (((1'd0 == and_ln591_1_fu_364_p2) & (icmp_ln589_fu_319_p2 == 1'd1))) begin
            local_mem_address1_local = zext_ln613_2_fu_392_p1;
        end else if ((icmp_ln589_fu_319_p2 == 1'd0)) begin
            local_mem_address1_local = zext_ln613_fu_331_p1;
        end else begin
            local_mem_address1_local = 'bx;
        end
    end else begin
        local_mem_address1_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_mem_ce0_local = 1'b1;
    end else begin
        local_mem_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd1 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'd0 == and_ln591_1_fu_364_p2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln589_fu_319_p2 == 1'd0) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0)))) begin
        local_mem_ce1_local = 1'b1;
    end else begin
        local_mem_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (icmp_ln573_reg_629 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_mem_we0_local = 1'b1;
    end else begin
        local_mem_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd1))) begin
        outValue_out_ap_vld = 1'b1;
    end else begin
        outValue_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln591_1_fu_364_p2 = (matchFlag_fu_94 & and_ln591_fu_358_p2);

assign and_ln591_fu_358_p2 = (icmp_ln591_fu_347_p2 & icmp_ln591_1_fu_353_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001_grp1 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3_grp1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1_grp1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3_grp1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1_grp1)));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3_grp1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1_grp1)));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3_grp1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1_grp1)));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1_grp1 = ((icmp_ln573_reg_629 == 1'd0) & (bestMatchStream_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3_grp1 = ((ap_predicate_op112_write_state4 == 1'b1) & (boosterStream_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_274 = ((1'd0 == and_ln591_1_fu_364_p2) & (outFlag_fu_382_p2 == 1'd1) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_543 = ((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0));
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_101 = (ap_predicate_op101_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_107 = (ap_predicate_op107_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_109 = (ap_predicate_op109_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_114 = (ap_predicate_op114_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_39 = (icmp_ln573_reg_629 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_51 = (ap_predicate_op51_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_67 = (ap_predicate_op67_load_state3 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter2_matchFlag_426_reg_173 = 'bx;

assign ap_phi_reg_pp0_iter2_skip_len_424_reg_183 = 'bx;

assign ap_phi_reg_pp0_iter3_empty_reg_193 = 'bx;

always @ (*) begin
    ap_predicate_op101_load_state3 = ((1'd1 == and_ln591_1_fu_364_p2) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op107_load_state4 = ((icmp_ln589_reg_663 == 1'd0) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op109_load_state4 = ((icmp_ln589_reg_663 == 1'd1) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0) & (1'd0 == and_ln591_1_reg_672));
end

always @ (*) begin
    ap_predicate_op112_write_state4 = ((outFlag_reg_676 == 1'd1) & (icmp_ln589_reg_663 == 1'd1) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0) & (1'd0 == and_ln591_1_reg_672));
end

always @ (*) begin
    ap_predicate_op114_load_state4 = ((icmp_ln589_reg_663 == 1'd1) & (icmp_ln573_reg_629_pp0_iter2_reg == 1'd0) & (1'd1 == and_ln591_1_reg_672));
end

always @ (*) begin
    ap_predicate_op51_load_state3 = ((icmp_ln589_fu_319_p2 == 1'd0) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op67_load_state3 = ((1'd0 == and_ln591_1_fu_364_p2) & (icmp_ln589_fu_319_p2 == 1'd1) & (icmp_ln573_reg_629_pp0_iter1_reg == 1'd0));
end

assign ap_ready = ap_ready_sig;

assign boostFlag_fu_295_p2 = ((tmp_fu_285_p4 == 2'd0) ? 1'b1 : 1'b0);

assign boosterStream_din = outValue_load_reg_689;

assign i_5_fu_250_p2 = (ap_sig_allocacmp_i_4 + 32'd1);

assign icmp_ln573_fu_244_p2 = ((ap_sig_allocacmp_i_4 == sub) ? 1'b1 : 1'b0);

assign icmp_ln589_fu_319_p2 = ((skip_len_fu_78 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_353_p2 = ((tCh_reg_640 == ap_sig_allocacmp_match_ch_load) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_347_p2 = ((match_len_fu_98 < 32'd255) ? 1'b1 : 1'b0);

assign icmp_ln601_fu_387_p2 = ((tLen_reg_645 == 8'd0) ? 1'b1 : 1'b0);

assign local_mem_address0 = zext_ln586_fu_301_p1;

assign local_mem_address1 = local_mem_address1_local;

assign match_len_3_fu_489_p2 = (match_len_fu_98 + 32'd1);

assign match_loc_4_fu_495_p2 = (match_loc_fu_102 + 32'd1);

assign match_loc_5_fu_373_p2 = (i_4_reg_622_pp0_iter1_reg - zext_ln597_fu_370_p1);

assign outFlag_fu_382_p2 = ((i_4_reg_622_pp0_iter1_reg != 32'd0) ? 1'b1 : 1'b0);

assign outValue_1_fu_509_p4 = {{outValue_fu_90[31:16]}, {trunc_ln594_fu_505_p1}, {outValue_fu_90[7:0]}};

assign outValue_out = outValue_fu_90;

assign skip_len_5_fu_325_p2 = ($signed(skip_len_fu_78) + $signed(16'd65535));

assign skip_len_6_fu_397_p2 = ($signed(tLen_reg_645) + $signed(8'd255));

assign skip_len_7_fu_402_p3 = ((boostFlag_reg_656[0:0] == 1'b1) ? 8'd0 : skip_len_6_fu_397_p2);

assign tCh_fu_264_p1 = bestMatchStream_dout[7:0];

assign tmp_fu_285_p4 = {{bestMatchStream_dout[31:30]}};

assign trunc_ln562_1_fu_378_p1 = match_loc_5_fu_373_p2[13:0];

assign trunc_ln562_fu_501_p1 = match_loc_4_fu_495_p2[13:0];

assign trunc_ln573_1_fu_261_p1 = i_4_reg_622[13:0];

assign trunc_ln573_fu_315_p1 = match_loc_fu_102[13:0];

assign trunc_ln594_fu_505_p1 = match_len_3_fu_489_p2[7:0];

assign zext_ln566_fu_410_p1 = skip_len_7_fu_402_p3;

assign zext_ln586_fu_301_p1 = trunc_ln573_1_fu_261_p1;

assign zext_ln597_fu_370_p1 = tOffset_reg_651;

assign zext_ln613_1_fu_519_p1 = trunc_ln562_fu_501_p1;

assign zext_ln613_2_fu_392_p1 = trunc_ln562_1_fu_378_p1;

assign zext_ln613_fu_331_p1 = trunc_ln573_fu_315_p1;

assign zext_ln614_fu_461_p1 = ap_phi_mux_skip_len_424_phi_fu_186_p4;

endmodule //lz4CompressEngineRun_lzBooster_255_16384_64_Pipeline_lz_booster
